{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/leejahun/practice/airbnb/web/components/Calendar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Calendar } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/scss/room.scss';\nimport * as Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport _ from \"lodash\";\nlet moment = extendMoment(Moment);\nmoment.locale('ko');\n\nconst Calendars = ({\n  room\n}) => {\n  const {\n    0: today,\n    1: setToday\n  } = useState(moment());\n  const {\n    0: date,\n    1: setDate\n  } = useState(moment());\n  const {\n    0: dates,\n    1: setDates\n  } = useState();\n  const dateFullCellRender = useCallback(dateParam => {\n    let classNameDiv = 'calendar-container2_1';\n    let classNameSpan = 'calendar-span1_1';\n\n    const check_in_list = _.map(room === null || room === void 0 ? void 0 : room.reservation, reservation => reservation.check_in);\n\n    if (dates.containes(dateParam)) {\n      classNameDiv = 'calendar-container2_2';\n      classNameSpan = 'calendar-span1_2';\n    }\n\n    if (_.includes(check_in_list, dateParam.format('YYYY-MM-DD')) || date.isAfter(dateParam)) {\n      classNameDiv = 'calendar-container2_3';\n      classNameSpan = 'calendar-span1_3';\n    }\n\n    return __jsx(\"div\", {\n      className: \"calendar-container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classNameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classNameSpan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, _parseInt(moment(dateParam).format('DD'), 10))));\n  }, [date, dates]);\n  const goLeft = useCallback(() => {\n    let newDate = _.clone(date);\n\n    newDate = newDate.add(-1, 'month');\n    setDate(newDate);\n  }, [date]);\n  const goRight = useCallback(() => {\n    let newDate = _.clone(date);\n\n    newDate = newDate.add(1, 'month');\n    setDate(newDate);\n  }, [date]);\n  const onSelect = useCallback(dateParam => {\n    const check_in_list = _.map(room === null || room === void 0 ? void 0 : room.reservation, reservation => reservation.check_in);\n\n    if (_.isEmpty(dates)) {\n      if (!_.includes(check_in_list, dateParam.format('YYYY-MM-DD')) && !date.isAfter(dateParam)) {\n        const newDate = _.clone(dateParam);\n\n        const newDates = moment.range(newDate, newDate);\n        setDate(newDate);\n        setDates(newDates);\n      }\n    } else {\n      const newDates = moment.range(date, dateParam);\n      setDates(newDates);\n    }\n  }, [date, dates]);\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"calendar-container3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"calendar-container4\",\n    onClick: goLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(LeftOutlined, {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    className: \"calendar-span2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, `${date.format('YYYY')}년 ${_parseInt(date.format('MM'), 10)}월`), __jsx(\"div\", {\n    className: \"calendar-container5\",\n    onClick: goRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(RightOutlined, {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), __jsx(Calendar, {\n    dateFullCellRender: dateFullCellRender,\n    value: date,\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n};\n\nexport default Calendars;","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/components/Calendar.tsx"],"names":["React","useState","useCallback","RightOutlined","LeftOutlined","Calendar","Moment","extendMoment","_","moment","locale","Calendars","room","today","setToday","date","setDate","dates","setDates","dateFullCellRender","dateParam","classNameDiv","classNameSpan","check_in_list","map","reservation","check_in","containes","includes","format","isAfter","goLeft","newDate","clone","add","goRight","onSelect","isEmpty","newDates","range","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useMemo } from \"react\";\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Calendar } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Room } from \"../generated/graphql\";\nimport '../assets/scss/room.scss';\nimport * as Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport _ from \"lodash\";\nlet moment = extendMoment(Moment);\nmoment.locale('ko');\ntype Props = {\n    room: Room\n};\n\nconst Calendars: React.FunctionComponent<Props> = ({\n    room\n}) => {\n    const [ today, setToday ] = useState(moment());\n    const [ date, setDate ] : any = useState(moment());\n    const [ dates, setDates ] = useState();\n    const dateFullCellRender = useCallback((dateParam) => {\n        let classNameDiv = 'calendar-container2_1';\n        let classNameSpan = 'calendar-span1_1';\n        const check_in_list = _.map( room?.reservation, reservation => reservation.check_in );\n        if ( dates.containes(dateParam) ) {\n            classNameDiv = 'calendar-container2_2';\n            classNameSpan = 'calendar-span1_2';\n        }\n        if ( _.includes( check_in_list, dateParam.format('YYYY-MM-DD') ) || date.isAfter(dateParam) ) {\n            classNameDiv = 'calendar-container2_3';\n            classNameSpan = 'calendar-span1_3';\n        }\n\n        return(\n            <div className=\"calendar-container1\">\n                <div className={classNameDiv}>\n                    <span className={classNameSpan}>{parseInt(moment(dateParam).format('DD'), 10)}</span>\n                </div>\n            </div>\n        );\n    }, [date, dates]);\n    const goLeft = useCallback(() => {\n        let newDate = _.clone(date);\n        newDate = newDate.add(-1, 'month');\n        setDate(newDate);\n    }, [date]);\n    const goRight = useCallback(() => {\n        let newDate = _.clone(date);\n        newDate = newDate.add(1, 'month');\n        setDate(newDate);\n    }, [date]);\n    const onSelect = useCallback((dateParam) => {\n        const check_in_list = _.map( room?.reservation, reservation => reservation.check_in );\n        if ( _.isEmpty(dates) ) {\n            if ( !_.includes( check_in_list, dateParam.format('YYYY-MM-DD') ) && !date.isAfter(dateParam) ) {\n                const newDate = _.clone(dateParam);\n                const newDates = moment.range(newDate, newDate);\n                setDate(newDate);\n                setDates(newDates);\n            }\n        } else {\n            const newDates = moment.range(date, dateParam);\n            setDates(newDates);\n        }\n    }, [date, dates]);\n    return (\n        <div style={ { width: '100%', height: '100%' } }>\n            <div className=\"calendar-container3\">\n                <div className=\"calendar-container4\" onClick={goLeft}>\n                    <LeftOutlined  style={ { fontSize: '20px' } }/>\n                </div>\n                <span className=\"calendar-span2\">{`${date.format('YYYY')}년 ${parseInt(date.format('MM'), 10)}월`}</span>\n                <div className=\"calendar-container5\" onClick={goRight}>\n                    <RightOutlined  style={ { fontSize: '20px' } }/>\n                </div>\n            </div>\n            <Calendar\n                dateFullCellRender={dateFullCellRender}\n                value={date}\n                onSelect={onSelect}\n            />\n        </div>\n    );\n}\n\nexport default Calendars;"]},"metadata":{},"sourceType":"module"}