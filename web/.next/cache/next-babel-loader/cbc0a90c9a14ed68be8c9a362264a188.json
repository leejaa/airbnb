{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport Link from \"next/link\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nvar validationSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n  password2: yup.string().oneOf([yup.ref('password'), null], '비밃번호를 확인해주세요.'),\n  emailSecret: yup.string()\n});\n\nvar Join = function Join(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      emailSecret = _useState[0],\n      setEmailSecret = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      emailSecretText = _useState2[0],\n      setEmailSecretText = _useState2[1];\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 1),\n      register = _useRegisterMutation2[0];\n\n  var confirmEmailSecret = useCallback(function () {\n    console.log('emailSecretText', emailSecretText);\n  }, []);\n  var onChange = useCallback(function (e) {\n    setEmailSecretText(e.target.value);\n  }, [emailSecretText]);\n  return __jsx(\"div\", {\n    className: \"container lg:w-5/12 md:w-1/4 mx-auto my-16 flex flex-col items-center border p-6 border-gray-400\"\n  }, __jsx(Formik, {\n    validateOnChange: true,\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: function _callee(data, _ref2) {\n      var setSubmitting, response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting;\n              setSubmitting(true);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(register({\n                variables: {\n                  email: data.email || \"\",\n                  password: data.password || \"\"\n                }\n              }));\n\n            case 4:\n              response = _context.sent;\n              setEmailSecret(true);\n              setSubmitting(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, {\n      className: \"w-full\"\n    }, __jsx(\"span\", {\n      className: \"text-red-700 font-medium text-sm\"\n    }, \"\".concat(_JSON$stringify(errors))), __jsx(Field, {\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC8FC\\uC18C\",\n      name: \"email\",\n      type: \"input\",\n      className: \"mb-3\"\n    }), __jsx(Field, {\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      type: \"password\",\n      className: \"mb-3\"\n    }), __jsx(Field, {\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      name: \"password2\",\n      type: \"password\",\n      className: \"mb-3\"\n    }), emailSecret && __jsx(Field, {\n      placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\",\n      name: \"emailSecret\",\n      type: \"input\",\n      className: \"mb-3\"\n    }), emailSecret ? __jsx(\"button\", {\n      className: \"btn bg-red-500 text-white font-medium\",\n      onClick: confirmEmailSecret,\n      onChange: onChange\n    }, \"\\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\") : __jsx(\"button\", {\n      className: \"btn bg-red-500 text-white font-medium\",\n      type: \"submit\",\n      disabled: isSubmitting\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n  }), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(\"span\", {\n    className: \"mt-2\"\n  }, \"\\uACC4\\uC815\\uC774 \\uC5C6\\uB2E4\\uBA74?\"), __jsx(Link, {\n    href: \"/join\"\n  }, __jsx(\"a\", {\n    href: \"\",\n    className: \"text-teal-500 font-medium\"\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n};\n\nexport default Join;","map":null,"metadata":{},"sourceType":"module"}