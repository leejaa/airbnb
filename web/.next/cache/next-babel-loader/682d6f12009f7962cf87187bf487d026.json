{"ast":null,"code":"var _jsxFileName = \"/Users/leejahun/practice/airbnb/web/components/RoomList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { CircleSpinner } from \"react-spinners-kit\";\nimport RoomCard from \"./RoomCard\";\nimport RoomSlide from \"./RoomSlide\";\nimport { useSelectRoomsQuery, useSelectTopRoomsQuery } from \"../generated/graphql\";\n\nconst RoomList = ({}) => {\n  const {\n    data,\n    loading,\n    fetchMore,\n    networkStatus,\n    refetch\n  } = useSelectRoomsQuery({\n    variables: {\n      skip: 0,\n      take: 12\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const {\n    data: data2\n  } = useSelectTopRoomsQuery();\n\n  if (!data || !data2) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\\uB85C\\uB529\\uC911...\");\n  }\n\n  const onScroll = useCallback(() => {\n    var _document$documentEle, _document$documentEle2;\n\n    if (window.scrollY + ((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.clientHeight) > ((_document$documentEle2 = document.documentElement) === null || _document$documentEle2 === void 0 ? void 0 : _document$documentEle2.scrollHeight) - 10) {// fetchMore({\n      //     variables: {\n      //         skip: 0,\n      //         take: data?.selectRooms.length + 8\n      //     },\n      //     updateQuery: (pv, { fetchMoreResult }) => {\n      //         if (!fetchMoreResult) {\n      //             return pv;\n      //         }\n      //         return {\n      //             // __typename: \"Room\",\n      //             selectRooms: [\n      //                 ...fetchMoreResult.selectRooms\n      //             ]\n      //         };\n      //     }\n      // });\n    }\n  }, [data.selectRooms.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [data.selectRooms.length]);\n  return __jsx(\"div\", {\n    className: \"container mx-auto pb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"rounded-xl -mx-40 h-50vh mb-24 bg-cover bg-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"mx-5 my-16 mb-10 mt-24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(RoomSlide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"flex flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.selectRooms.map((room, i) => __jsx(RoomCard, {\n    room: room,\n    key: i,\n    width: \"1/4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    style: {\n      borderWidth: 2,\n      borderColor: 'black',\n      width: '100%',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(CircleSpinner, {\n    size: 30,\n    color: \"#686769\",\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))))));\n};\n\nexport default RoomList;","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/components/RoomList.tsx"],"names":["React","useEffect","useCallback","CircleSpinner","RoomCard","RoomSlide","useSelectRoomsQuery","useSelectTopRoomsQuery","RoomList","data","loading","fetchMore","networkStatus","refetch","variables","skip","take","notifyOnNetworkStatusChange","data2","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","selectRooms","length","addEventListener","removeEventListener","map","room","i","borderWidth","borderColor","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from \"react\";\nimport { CircleSpinner } from \"react-spinners-kit\";\nimport RoomCard from \"./RoomCard\";\nimport RoomSlide from \"./RoomSlide\";\nimport { useSelectRoomsQuery, useSelectTopRoomsQuery } from \"../generated/graphql\";\n\ntype Props = {\n};\n\nconst RoomList: React.FunctionComponent<Props> = ({\n\n}) => {\n    const { data, loading, fetchMore, networkStatus, refetch } = useSelectRoomsQuery({\n        variables: { skip: 0, take: 12 },\n        notifyOnNetworkStatusChange: true,\n    });\n    const { data : data2 } = useSelectTopRoomsQuery();\n    if (!data || !data2) {\n        return (\n            <div>로딩중...</div>\n        );\n    }\n    const onScroll = useCallback(() => {\n        if (window.scrollY + document.documentElement?.clientHeight > document.documentElement?.scrollHeight - 10) {\n            // fetchMore({\n            //     variables: {\n            //         skip: 0,\n            //         take: data?.selectRooms.length + 8\n            //     },\n            //     updateQuery: (pv, { fetchMoreResult }) => {\n            //         if (!fetchMoreResult) {\n            //             return pv;\n            //         }\n            //         return {\n            //             // __typename: \"Room\",\n            //             selectRooms: [\n            //                 ...fetchMoreResult.selectRooms\n            //             ]\n            //         };\n            //     }\n            // });\n        }\n    }, [ data.selectRooms.length ]);\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n          window.removeEventListener('scroll', onScroll);\n        };\n    }, [data.selectRooms.length]);\n    return (\n        <div className=\"container mx-auto pb-10\">\n            <div className=\"rounded-xl -mx-40 h-50vh mb-24 bg-cover bg-center\">\n                <div className=\"mx-5 my-16 mb-10 mt-24\">\n                    <RoomSlide />\n                    <div className=\"flex flex-wrap\">\n                        {\n                            data.selectRooms.map((room, i) => (\n                                <RoomCard room={room as any} key={ i } width={\"1/4\"}/>\n                            ))\n                        }\n                        <div style={ { borderWidth: 2, borderColor: 'black', width: '100%', textAlign: 'center' } }>\n                            <CircleSpinner size={30} color=\"#686769\" loading={true} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RoomList;"]},"metadata":{},"sourceType":"module"}