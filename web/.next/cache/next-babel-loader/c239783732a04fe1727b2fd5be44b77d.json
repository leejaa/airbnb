{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nexport const initialState = {\n  houseType: 'apartment',\n  houseRadio: 'all',\n  convenience: [],\n  lat: 0,\n  lng: 0,\n  address: [],\n  postCode: '',\n  imageUrl: '',\n  dates: []\n};\nexport const roomReducer = (state, action) => {\n  switch (action.type) {\n    case 'setHouseType':\n      {\n        return _objectSpread({}, state, {\n          houseType: action.value\n        });\n      }\n\n    case 'setHouseRadio':\n      {\n        return _objectSpread({}, state, {\n          houseRadio: action.value\n        });\n      }\n\n    case 'setConvenience':\n      {\n        if (_.includes(state.convenience, action.value)) {\n          return _objectSpread({}, state, {\n            convenience: _.pull(state.convenience, action.value)\n          });\n        } else {\n          return _objectSpread({}, state, {\n            convenience: _.concat(state.convenience, action.value)\n          });\n        }\n      }\n\n    case 'setLng':\n      {\n        return _objectSpread({}, state, {\n          lng: action.value\n        });\n      }\n\n    case 'setLat':\n      {\n        return _objectSpread({}, state, {\n          lat: action.value\n        });\n      }\n\n    case 'setAddress':\n      {\n        return _objectSpread({}, state, {\n          address: action.value\n        });\n      }\n\n    case 'setPostcode':\n      {\n        return _objectSpread({}, state, {\n          postCode: action.value\n        });\n      }\n\n    case 'setImageUrl':\n      {\n        return _objectSpread({}, state, {\n          imageUrl: action.value\n        });\n      }\n\n    case 'setDates':\n      {\n        return _objectSpread({}, state, {\n          dates: action.dates\n        });\n      }\n\n    default:\n      {\n        throw new Error(`unexpected action.type: ${action.type}`);\n      }\n  }\n};","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/reducer/roomReducer.ts"],"names":["_","initialState","houseType","houseRadio","convenience","lat","lng","address","postCode","imageUrl","dates","roomReducer","state","action","type","value","includes","pull","concat","Error"],"mappings":";;;;;;;;;;;;AACA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,WADe;AAE1BC,EAAAA,UAAU,EAAE,KAFc;AAG1BC,EAAAA,WAAW,EAAE,EAHa;AAI1BC,EAAAA,GAAG,EAAE,CAJqB;AAK1BC,EAAAA,GAAG,EAAE,CALqB;AAM1BC,EAAAA,OAAO,EAAE,EANiB;AAO1BC,EAAAA,QAAQ,EAAE,EAPgB;AAQ1BC,EAAAA,QAAQ,EAAE,EARgB;AAS1BC,EAAAA,KAAK,EAAE;AATmB,CAArB;AAYP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,iCAAYF,KAAZ;AAAmBV,UAAAA,SAAS,EAAEW,MAAM,CAACE;AAArC;AACD;;AACD,SAAK,eAAL;AAAsB;AACpB,iCAAYH,KAAZ;AAAmBT,UAAAA,UAAU,EAAEU,MAAM,CAACE;AAAtC;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,YAAIf,CAAC,CAACgB,QAAF,CAAWJ,KAAK,CAACR,WAAjB,EAA8BS,MAAM,CAACE,KAArC,CAAJ,EAAiD;AAC/C,mCAAYH,KAAZ;AAAmBR,YAAAA,WAAW,EAAEJ,CAAC,CAACiB,IAAF,CAAOL,KAAK,CAACR,WAAb,EAA0BS,MAAM,CAACE,KAAjC;AAAhC;AACD,SAFD,MAEO;AACL,mCAAYH,KAAZ;AAAmBR,YAAAA,WAAW,EAAEJ,CAAC,CAACkB,MAAF,CAASN,KAAK,CAACR,WAAf,EAA4BS,MAAM,CAACE,KAAnC;AAAhC;AACD;AACF;;AACD,SAAK,QAAL;AAAe;AACb,iCAAYH,KAAZ;AAAmBN,UAAAA,GAAG,EAAEO,MAAM,CAACE;AAA/B;AACD;;AACD,SAAK,QAAL;AAAe;AACb,iCAAYH,KAAZ;AAAmBP,UAAAA,GAAG,EAAEQ,MAAM,CAACE;AAA/B;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,iCAAYH,KAAZ;AAAmBL,UAAAA,OAAO,EAAEM,MAAM,CAACE;AAAnC;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,iCAAYH,KAAZ;AAAmBJ,UAAAA,QAAQ,EAAEK,MAAM,CAACE;AAApC;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,iCAAYH,KAAZ;AAAmBH,UAAAA,QAAQ,EAAEI,MAAM,CAACE;AAApC;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,iCAAYH,KAAZ;AAAmBF,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAAjC;AACD;;AACD;AAAS;AACP,cAAM,IAAIS,KAAJ,CAAW,2BAA0BN,MAAM,CAACC,IAAK,EAAjD,CAAN;AACD;AAlCH;AAoCD,CArCM","sourcesContent":["import React, { useReducer } from 'react';\nimport _ from 'lodash';\n\nexport const initialState = {\n  houseType: 'apartment',\n  houseRadio: 'all',\n  convenience: [],\n  lat: 0,\n  lng: 0,\n  address: [],\n  postCode: '',\n  imageUrl: '',\n  dates: []\n}\n\nexport const roomReducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'setHouseType': {\n      return { ...state, houseType: action.value };\n    }\n    case 'setHouseRadio': {\n      return { ...state, houseRadio: action.value };\n    }\n    case 'setConvenience': {\n      if (_.includes(state.convenience, action.value)) {\n        return { ...state, convenience: _.pull(state.convenience, action.value) };\n      } else {\n        return { ...state, convenience: _.concat(state.convenience, action.value) };\n      }\n    }\n    case 'setLng': {\n      return { ...state, lng: action.value };\n    }\n    case 'setLat': {\n      return { ...state, lat: action.value };\n    }\n    case 'setAddress': {\n      return { ...state, address: action.value };\n    }\n    case 'setPostcode': {\n      return { ...state, postCode: action.value };\n    }\n    case 'setImageUrl': {\n      return { ...state, imageUrl: action.value };\n    }\n    case 'setDates': {\n      return { ...state, dates: action.dates };\n    }\n    default: {\n      throw new Error(`unexpected action.type: ${action.type}`)\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}