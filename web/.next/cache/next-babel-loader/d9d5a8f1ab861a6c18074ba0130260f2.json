{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/leejahun/practice/airbnb/web/pages/test.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from \"react\";\nimport * as firebase from 'firebase';\nexport default (function () {\n  var db = useMemo(function () {\n    return firebase.firestore();\n  }, []);\n\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var onSet = function onSet() {\n    var querySnapshot, newList;\n    return _regeneratorRuntime.async(function onSet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"chat\").add({\n              first: \"Lee\",\n              last: \"jahun\",\n              born: \"suwon\"\n            }));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(db.collection(\"chat\").get());\n\n          case 4:\n            querySnapshot = _context.sent;\n            newList = [];\n            querySnapshot.forEach(function (doc) {\n              newList.push(doc.data());\n            });\n            setList(newList);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, list === null || list === void 0 ? void 0 : list.map(function (item) {\n    return _JSON$stringify(item, null, 2);\n  }), __jsx(\"button\", {\n    onClick: onSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"set\"));\n});","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/pages/test.tsx"],"names":["React","useState","useMemo","firebase","db","firestore","list","setList","onSet","collection","add","first","last","born","get","querySnapshot","newList","forEach","doc","push","data","map","item"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,gBAAe,YAAM;AACjB,MAAMC,EAAE,GAAGF,OAAO,CAAC;AAAA,WAAMC,QAAQ,CAACE,SAAT,EAAN;AAAA,GAAD,EAA6B,EAA7B,CAAlB;;AADiB,kBAEOJ,QAAQ,CAAoC,EAApC,CAFf;AAAA,MAEVK,IAFU;AAAA,MAEJC,OAFI;;AAGjB,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJJ,EAAE,CAACK,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0B;AAC5BC,cAAAA,KAAK,EAAE,KADqB;AAE5BC,cAAAA,IAAI,EAAE,OAFsB;AAG5BC,cAAAA,IAAI,EAAE;AAHsB,aAA1B,CADI;;AAAA;AAAA;AAAA,6CAMkBT,EAAE,CAACK,UAAH,CAAc,MAAd,EAAsBK,GAAtB,EANlB;;AAAA;AAMJC,YAAAA,aANI;AAOJC,YAAAA,OAPI,GAOyC,EAPzC;AAQVD,YAAAA,aAAa,CAACE,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC3BF,cAAAA,OAAO,CAACG,IAAR,CAAaD,GAAG,CAACE,IAAJ,EAAb;AACH,aAFD;AAGAb,YAAAA,OAAO,CAACS,OAAD,CAAP;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEe,GAAN,CAAU,UAAAC,IAAI,EAAI;AACd,WAAO,gBAAeA,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAP;AACH,GAFD,CAFR,EAMI;AAAQ,IAAA,OAAO,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CADJ;AAWH,CA3BD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport * as firebase from 'firebase';\n\nexport default () => {\n    const db = useMemo(() => firebase.firestore(), []);\n    const [list, setList] = useState<firebase.firestore.DocumentData[]>([]);\n    const onSet = async () => {\n        await db.collection(\"chat\").add({\n            first: \"Lee\",\n            last: \"jahun\",\n            born: \"suwon\"\n        });\n        const querySnapshot = await db.collection(\"chat\").get();\n        const newList: firebase.firestore.DocumentData[] = [];\n        querySnapshot.forEach((doc) => {\n            newList.push(doc.data());\n        });\n        setList(newList);\n    };\n    return (\n        <div>\n            {\n                list?.map(item => {\n                    return JSON.stringify(item, null, 2)\n                })\n            }\n            <button onClick={onSet}>set</button>\n        </div>\n\n    );\n};"]},"metadata":{},"sourceType":"module"}