{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/leejahun/practice/airbnb/web/components/Login.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport Link from \"next/link\";\nimport { useLoginMutation, MeDocument } from \"../generated/graphql\";\nconst validationSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required()\n});\n\nconst Login = ({}) => {\n  const [login] = useLoginMutation();\n  return __jsx(\"div\", {\n    className: \"container lg:w-5/12 md:w-1/4 mx-auto my-16 flex flex-col items-center border p-6 border-gray-400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"flex flex-col w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"\",\n    className: \"btn border-2  text-gray-700 mb-2 border-gray-700 font-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fab fa-github-alt mr-2 fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \" \\uAE43\\uD5C8\\uBE0C \\uB85C\\uADF8\\uC778\"), __jsx(\"a\", {\n    href: \"{% url 'users:kakao-login' %}\",\n    className: \"btn border text-yellow-800 mb-2 border-yellow-400 bg-yellow-400 font-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-comment mr-2 fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\")), __jsx(Formik, {\n    validateOnChange: true,\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (data, {\n      setSubmitting\n    }) => {\n      var _response$data, _response$data$login;\n\n      setSubmitting(true);\n      const response = await login({\n        variables: {\n          email: data.email || \"\",\n          password: data.password || \"\"\n        },\n        update: (store, {\n          data\n        }) => {\n          if (!data) {\n            return null;\n          }\n\n          store.writeQuery({\n            query: MeDocument,\n            data: {\n              me: data.login.user\n            }\n          });\n          return null;\n        }\n      });\n      console.log('response', response);\n      document.cookie = `jid=${response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$login = _response$data.login) === null || _response$data$login === void 0 ? void 0 : _response$data$login.refreshToken}`; // window.location.href = '/';\n\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    isSubmitting\n  }) => __jsx(Form, {\n    className: \"w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"text-red-700 font-medium text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, `${_JSON$stringify(errors)}`), __jsx(Field, {\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC8FC\\uC18C\",\n    name: \"email\",\n    type: \"input\",\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(Field, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    name: \"password\",\n    type: \"password\",\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    className: \"btn bg-red-500 text-white font-medium\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uBC84\\uD2BC\"))), __jsx(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uACC4\\uC815\\uC774 \\uC5C6\\uB2E4\\uBA74?\"), __jsx(Link, {\n    href: \"/join\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"\",\n    className: \"text-teal-500 font-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/components/Login.tsx"],"names":["React","Formik","Field","Form","yup","Link","useLoginMutation","MeDocument","validationSchema","object","email","string","required","password","Login","login","data","setSubmitting","response","variables","update","store","writeQuery","query","me","user","console","log","document","cookie","refreshToken","values","errors","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Formik,\n    Field,\n    Form,\n} from \"formik\";\nimport * as yup from \"yup\";\nimport Link from \"next/link\";\nimport Router from 'next/router'\nimport { useLoginMutation, MeQuery, MeDocument } from \"../generated/graphql\";\n\nconst validationSchema = yup.object({\n    email: yup\n        .string().email()\n        .required(),\n    password: yup\n        .string()\n        .required()\n});\n\ntype Props = {\n};\n\nconst Login: React.FunctionComponent<Props> = ({\n}) => {\n    const [login] = useLoginMutation();\n    return (\n        <div className=\"container lg:w-5/12 md:w-1/4 mx-auto my-16 flex flex-col items-center border p-6 border-gray-400\">\n            <div className=\"flex flex-col w-full\">\n                <a href=\"\" className=\"btn border-2  text-gray-700 mb-2 border-gray-700 font-medium\">\n                    <i className=\"fab fa-github-alt mr-2 fa-lg\"></i> 깃허브 로그인\n                </a>\n                <a href=\"{% url 'users:kakao-login' %}\" className=\"btn border text-yellow-800 mb-2 border-yellow-400 bg-yellow-400 font-medium\">\n                    <i className=\"fas fa-comment mr-2 fa-lg\"></i> 카카오 로그인\n                </a>\n            </div>\n            <Formik\n                validateOnChange={true}\n                initialValues={{\n                    email: \"\",\n                    password: \"\",\n                }}\n                validationSchema={validationSchema}\n                onSubmit={async (data, { setSubmitting }) => {\n                    setSubmitting(true);\n                    const response : any = await login({\n                        variables: {\n                            email: data.email || \"\",\n                            password: data.password || \"\"\n                        },\n                        update: (store, { data }) => {\n                            if ( !data ) {\n                                return null;\n                            }\n                            store.writeQuery<MeQuery>({\n                                query: MeDocument,\n                                data: {\n                                    me: data.login.user as any\n                                }\n                            });\n                            return null;\n                        }\n                    });\n                    console.log('response', response);\n                    document.cookie = `jid=${response?.data?.login?.refreshToken}`;\n                    // window.location.href = '/';\n                    setSubmitting(false);\n                }}\n            >\n                {({ values, errors, isSubmitting }) => (\n                    <Form className=\"w-full\">\n                        <span className=\"text-red-700 font-medium text-sm\">{ `${JSON.stringify(errors)}` }</span>\n                        <Field\n                            placeholder=\"이메일주소\"\n                            name=\"email\"\n                            type=\"input\"\n                            className=\"mb-3\"\n                        />\n                        <Field\n                            placeholder=\"비밀번호\"\n                            name=\"password\"\n                            type=\"password\"\n                            className=\"mb-3\"\n                        />\n                        <button className=\"btn bg-red-500 text-white font-medium\" type=\"submit\">버튼</button>\n                    </Form>\n                )}\n            </Formik>\n            <div className=\"mt-5\">\n                <span className=\"mt-2\">계정이 없다면?</span>\n                <Link href=\"/join\">\n                    <a href=\"\" className=\"text-teal-500 font-medium\">회원가입</a>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}