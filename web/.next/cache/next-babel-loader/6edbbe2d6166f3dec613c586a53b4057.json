{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/leejahun/practice/airbnb/web/components/Calendar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Calendar } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/scss/room.scss';\nimport * as Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport _ from \"lodash\";\nvar moment = extendMoment(Moment);\nmoment.locale('ko');\n\nvar Calendars = function Calendars(_ref) {\n  var room = _ref.room;\n\n  var _useState = useState(moment()),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(moment.range(moment(), moment())),\n      dates = _useState2[0],\n      setDates = _useState2[1];\n\n  var dateFullCellRender = useCallback(function (dateParam) {\n    var classNameDiv = 'calendar-container2_1';\n    var classNameSpan = 'calendar-span1_1';\n\n    var check_in_list = _.map(room === null || room === void 0 ? void 0 : room.reservation, function (reservation) {\n      return reservation.check_in;\n    });\n\n    if (dates.contains(dateParam)) {\n      classNameDiv = 'calendar-container2_2';\n      classNameSpan = 'calendar-span1_2';\n    }\n\n    if (_.includes(check_in_list, dateParam.format('YYYY-MM-DD')) || date.isAfter(dateParam)) {\n      classNameDiv = 'calendar-container2_3';\n      classNameSpan = 'calendar-span1_3';\n    }\n\n    return __jsx(\"div\", {\n      className: \"calendar-container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classNameDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classNameSpan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, _parseInt(moment(dateParam).format('DD'), 10))));\n  }, [date, dates]);\n  var goLeft = useCallback(function () {\n    var newDate = _.clone(date);\n\n    newDate = newDate.add(-1, 'month');\n    setDate(newDate);\n  }, [date]);\n  var goRight = useCallback(function () {\n    var newDate = _.clone(date);\n\n    newDate = newDate.add(1, 'month');\n    setDate(newDate);\n  }, [date]);\n  var onSelect = useCallback(function (dateParam) {\n    var check_in_list = _.map(room === null || room === void 0 ? void 0 : room.reservation, function (reservation) {\n      return reservation.check_in;\n    });\n\n    if (dates.center().format('YYYY-MM-DD') == moment().format('YYYY-MM-DD')) {\n      if (!_.includes(check_in_list, dateParam.format('YYYY-MM-DD')) && !date.isAfter(dateParam)) {\n        var newDate = _.clone(dateParam);\n\n        var newDates = moment.range(newDate, newDate);\n        setDate(newDate);\n        setDates(newDates);\n      }\n    } else {\n      var _newDates = moment.range(date, dateParam);\n\n      setDates(_newDates);\n    }\n  }, [date, dates]);\n  var clearDate = useCallback(function () {\n    setDate(moment());\n    setDates(moment.range(moment(), moment()));\n  }, [date, dates]);\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"calendar-container3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"calendar-container4\",\n    onClick: goLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(LeftOutlined, {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    className: \"calendar-span2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\".concat(date.format('YYYY'), \"\\uB144 \").concat(_parseInt(date.format('MM'), 10), \"\\uC6D4\")), __jsx(\"div\", {\n    className: \"calendar-container5\",\n    onClick: goRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(RightOutlined, {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), __jsx(Calendar, {\n    dateFullCellRender: dateFullCellRender,\n    value: date,\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), dates.center().format('YYYY-MM-DD') != moment().format('YYYY-MM-DD') && __jsx(\"span\", {\n    style: {\n      color: 'rgb(0, 132, 137)',\n      marginLeft: '4%'\n    },\n    onClick: clearDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\uB0A0\\uC9DC \\uC9C0\\uC6B0\\uAE30\"));\n};\n\nexport default Calendars;","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/components/Calendar.tsx"],"names":["React","useState","useCallback","RightOutlined","LeftOutlined","Calendar","Moment","extendMoment","_","moment","locale","Calendars","room","date","setDate","range","dates","setDates","dateFullCellRender","dateParam","classNameDiv","classNameSpan","check_in_list","map","reservation","check_in","contains","includes","format","isAfter","goLeft","newDate","clone","add","goRight","onSelect","center","newDates","clearDate","width","height","fontSize","color","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAkCC,WAAlC,QAA8D,OAA9D;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,mBAA5C;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAO,sCAAP;AAEA,OAAO,0BAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,IAAIC,MAAM,GAAGF,YAAY,CAACD,MAAD,CAAzB;AACAG,MAAM,CAACC,MAAP,CAAc,IAAd;;AAKA,IAAMC,SAAyC,GAAG,SAA5CA,SAA4C,OAE5C;AAAA,MADFC,IACE,QADFA,IACE;;AAAA,kBAC8BX,QAAQ,CAACQ,MAAM,EAAP,CADtC;AAAA,MACMI,IADN;AAAA,MACYC,OADZ;;AAAA,mBAE0Bb,QAAQ,CAACQ,MAAM,CAACM,KAAP,CAAaN,MAAM,EAAnB,EAAuBA,MAAM,EAA7B,CAAD,CAFlC;AAAA,MAEMO,KAFN;AAAA,MAEaC,QAFb;;AAGF,MAAMC,kBAAkB,GAAGhB,WAAW,CAAC,UAACiB,SAAD,EAAe;AAClD,QAAIC,YAAY,GAAG,uBAAnB;AACA,QAAIC,aAAa,GAAG,kBAApB;;AACA,QAAMC,aAAa,GAAGd,CAAC,CAACe,GAAF,CAAOX,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEY,WAAb,EAA0B,UAAAA,WAAW;AAAA,aAAIA,WAAW,CAACC,QAAhB;AAAA,KAArC,CAAtB;;AACA,QAAKT,KAAK,CAACU,QAAN,CAAeP,SAAf,CAAL,EAAiC;AAC7BC,MAAAA,YAAY,GAAG,uBAAf;AACAC,MAAAA,aAAa,GAAG,kBAAhB;AACH;;AACD,QAAKb,CAAC,CAACmB,QAAF,CAAYL,aAAZ,EAA2BH,SAAS,CAACS,MAAV,CAAiB,YAAjB,CAA3B,KAA+Df,IAAI,CAACgB,OAAL,CAAaV,SAAb,CAApE,EAA8F;AAC1FC,MAAAA,YAAY,GAAG,uBAAf;AACAC,MAAAA,aAAa,GAAG,kBAAhB;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,UAASZ,MAAM,CAACU,SAAD,CAAN,CAAkBS,MAAlB,CAAyB,IAAzB,CAAT,EAAyC,EAAzC,CAAjC,CADJ,CADJ,CADJ;AAOH,GApBqC,EAoBnC,CAACf,IAAD,EAAOG,KAAP,CApBmC,CAAtC;AAqBA,MAAMc,MAAM,GAAG5B,WAAW,CAAC,YAAM;AAC7B,QAAI6B,OAAO,GAAGvB,CAAC,CAACwB,KAAF,CAAQnB,IAAR,CAAd;;AACAkB,IAAAA,OAAO,GAAGA,OAAO,CAACE,GAAR,CAAY,CAAC,CAAb,EAAgB,OAAhB,CAAV;AACAnB,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACH,GAJyB,EAIvB,CAAClB,IAAD,CAJuB,CAA1B;AAKA,MAAMqB,OAAO,GAAGhC,WAAW,CAAC,YAAM;AAC9B,QAAI6B,OAAO,GAAGvB,CAAC,CAACwB,KAAF,CAAQnB,IAAR,CAAd;;AACAkB,IAAAA,OAAO,GAAGA,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAe,OAAf,CAAV;AACAnB,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACH,GAJ0B,EAIxB,CAAClB,IAAD,CAJwB,CAA3B;AAKA,MAAMsB,QAAQ,GAAGjC,WAAW,CAAC,UAACiB,SAAD,EAAe;AACxC,QAAMG,aAAa,GAAGd,CAAC,CAACe,GAAF,CAAOX,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEY,WAAb,EAA0B,UAAAA,WAAW;AAAA,aAAIA,WAAW,CAACC,QAAhB;AAAA,KAArC,CAAtB;;AACA,QAAKT,KAAK,CAACoB,MAAN,GAAeR,MAAf,CAAsB,YAAtB,KAAuCnB,MAAM,GAAGmB,MAAT,CAAgB,YAAhB,CAA5C,EAA4E;AACxE,UAAK,CAACpB,CAAC,CAACmB,QAAF,CAAYL,aAAZ,EAA2BH,SAAS,CAACS,MAAV,CAAiB,YAAjB,CAA3B,CAAD,IAAgE,CAACf,IAAI,CAACgB,OAAL,CAAaV,SAAb,CAAtE,EAAgG;AAC5F,YAAMY,OAAO,GAAGvB,CAAC,CAACwB,KAAF,CAAQb,SAAR,CAAhB;;AACA,YAAMkB,QAAQ,GAAG5B,MAAM,CAACM,KAAP,CAAagB,OAAb,EAAsBA,OAAtB,CAAjB;AACAjB,QAAAA,OAAO,CAACiB,OAAD,CAAP;AACAd,QAAAA,QAAQ,CAACoB,QAAD,CAAR;AACH;AACJ,KAPD,MAOO;AACH,UAAMA,SAAQ,GAAG5B,MAAM,CAACM,KAAP,CAAaF,IAAb,EAAmBM,SAAnB,CAAjB;;AACAF,MAAAA,QAAQ,CAACoB,SAAD,CAAR;AACH;AACJ,GAb2B,EAazB,CAACxB,IAAD,EAAOG,KAAP,CAbyB,CAA5B;AAcA,MAAMsB,SAAS,GAAGpC,WAAW,CAAC,YAAM;AAChCY,IAAAA,OAAO,CAACL,MAAM,EAAP,CAAP;AACAQ,IAAAA,QAAQ,CAACR,MAAM,CAACM,KAAP,CAAaN,MAAM,EAAnB,EAAuBA,MAAM,EAA7B,CAAD,CAAR;AACH,GAH4B,EAG1B,CAACI,IAAD,EAAOG,KAAP,CAH0B,CAA7B;AAIA,SACI;AAAK,IAAA,KAAK,EAAG;AAAEuB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEV,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAe,IAAA,KAAK,EAAG;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqC5B,IAAI,CAACe,MAAL,CAAY,MAAZ,CAArC,oBAA6D,UAASf,IAAI,CAACe,MAAL,CAAY,IAAZ,CAAT,EAA4B,EAA5B,CAA7D,YAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEM,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAgB,IAAA,KAAK,EAAG;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,EAUI,MAAC,QAAD;AACI,IAAA,kBAAkB,EAAEvB,kBADxB;AAEI,IAAA,KAAK,EAAEL,IAFX;AAGI,IAAA,QAAQ,EAAEsB,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAgBQnB,KAAK,CAACoB,MAAN,GAAeR,MAAf,CAAsB,YAAtB,KAAuCnB,MAAM,GAAGmB,MAAT,CAAgB,YAAhB,CAAvC,IACI;AAAM,IAAA,KAAK,EAAG;AAAEc,MAAAA,KAAK,EAAE,kBAAT;AAA6BC,MAAAA,UAAU,EAAE;AAAzC,KAAd;AAAgE,IAAA,OAAO,EAAEL,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAjBZ,CADJ;AAuBH,CA7ED;;AA+EA,eAAe3B,SAAf","sourcesContent":["import React, { useState, useRef, useCallback, useMemo } from \"react\";\nimport { RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Calendar } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Room } from \"../generated/graphql\";\nimport '../assets/scss/room.scss';\nimport * as Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport _ from \"lodash\";\nlet moment = extendMoment(Moment);\nmoment.locale('ko');\ntype Props = {\n    room: Room\n};\n\nconst Calendars: React.FunctionComponent<Props> = ({\n    room\n}) => {\n    const [ date, setDate ] : any = useState(moment());\n    const [ dates, setDates ] = useState(moment.range(moment(), moment()));\n    const dateFullCellRender = useCallback((dateParam) => {\n        let classNameDiv = 'calendar-container2_1';\n        let classNameSpan = 'calendar-span1_1';\n        const check_in_list = _.map( room?.reservation, reservation => reservation.check_in );\n        if ( dates.contains(dateParam) ) {\n            classNameDiv = 'calendar-container2_2';\n            classNameSpan = 'calendar-span1_2';\n        }\n        if ( _.includes( check_in_list, dateParam.format('YYYY-MM-DD') ) || date.isAfter(dateParam) ) {\n            classNameDiv = 'calendar-container2_3';\n            classNameSpan = 'calendar-span1_3';\n        }\n\n        return(\n            <div className=\"calendar-container1\">\n                <div className={classNameDiv}>\n                    <span className={classNameSpan}>{parseInt(moment(dateParam).format('DD'), 10)}</span>\n                </div>\n            </div>\n        );\n    }, [date, dates]);\n    const goLeft = useCallback(() => {\n        let newDate = _.clone(date);\n        newDate = newDate.add(-1, 'month');\n        setDate(newDate);\n    }, [date]);\n    const goRight = useCallback(() => {\n        let newDate = _.clone(date);\n        newDate = newDate.add(1, 'month');\n        setDate(newDate);\n    }, [date]);\n    const onSelect = useCallback((dateParam) => {\n        const check_in_list = _.map( room?.reservation, reservation => reservation.check_in );\n        if ( dates.center().format('YYYY-MM-DD') == moment().format('YYYY-MM-DD') ) {\n            if ( !_.includes( check_in_list, dateParam.format('YYYY-MM-DD') ) && !date.isAfter(dateParam) ) {\n                const newDate = _.clone(dateParam);\n                const newDates = moment.range(newDate, newDate);\n                setDate(newDate);\n                setDates(newDates);\n            }\n        } else {\n            const newDates = moment.range(date, dateParam);\n            setDates(newDates);\n        }\n    }, [date, dates]);\n    const clearDate = useCallback(() => {\n        setDate(moment());\n        setDates(moment.range(moment(), moment()));\n    }, [date, dates]);\n    return (\n        <div style={ { width: '100%', height: '100%' } }>\n            <div className=\"calendar-container3\">\n                <div className=\"calendar-container4\" onClick={goLeft}>\n                    <LeftOutlined  style={ { fontSize: '20px' } }/>\n                </div>\n                <span className=\"calendar-span2\">{`${date.format('YYYY')}년 ${parseInt(date.format('MM'), 10)}월`}</span>\n                <div className=\"calendar-container5\" onClick={goRight}>\n                    <RightOutlined  style={ { fontSize: '20px' } }/>\n                </div>\n            </div>\n            <Calendar\n                dateFullCellRender={dateFullCellRender}\n                value={date}\n                onSelect={onSelect}\n            />\n            {\n                dates.center().format('YYYY-MM-DD') != moment().format('YYYY-MM-DD') && (\n                    <span style={ { color: 'rgb(0, 132, 137)', marginLeft: '4%' } } onClick={clearDate}>날짜 지우기</span>\n                )\n            }\n        </div>\n    );\n}\n\nexport default Calendars;"]},"metadata":{},"sourceType":"module"}