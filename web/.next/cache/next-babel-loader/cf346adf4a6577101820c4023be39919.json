{"ast":null,"code":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../lib/apollo\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp(props) {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props)); // fire();\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient;\n      return React.createElement(Container, null, React.createElement(ApolloProvider, {\n        client: apolloClient\n      }, React.createElement(Component, pageProps)));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/pages/_app.tsx"],"names":["App","Container","React","ApolloProvider","withApollo","MyApp","props","Component","pageProps","apolloClient"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;;IAGMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAwB;AAAA;;AAAA,8EAChBA,KADgB,IAEtB;AACD;;;;6BACQ;AAAA,wBAC6C,KAAKA,KADlD;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,YADvB,eACuBA,YADvB;AAEP,aACE,oBAAC,SAAD,QACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA;AAAxB,SACE,oBAAC,SAAD,EAAeD,SAAf,CADF,CADF,CADF;AAOD;;;;EAdiBR,G;;AAiBpB,eAAeI,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../lib/apollo\";\nimport { fire } from \"../firebase\";\n\nclass MyApp extends App<any> {\n  constructor(props: any) {\n    super(props);\n    // fire();\n  }\n  render() {\n    const { Component, pageProps, apolloClient }: any = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp);"]},"metadata":{},"sourceType":"module"}