{"ast":null,"code":"var _jsxFileName = \"/Users/leejahun/practice/airbnb/web/components/RoomSlide.tsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { useSelectTopRoomsQuery } from \"../generated/graphql\";\nimport RoomCard from \"./RoomCard\";\nimport { Icon } from \"antd\";\n\nconst RoomSlide = ({}) => {\n  var _data$selectTopRooms;\n\n  const {\n    data,\n    loading\n  } = useSelectTopRoomsQuery();\n  const leftArrow = useMemo(() => __jsx(\"div\", {\n    style: {\n      borderWidth: 2,\n      borderRadius: 30,\n      width: 30,\n      height: 30,\n      backgroundColor: '#FFFFFF',\n      borderColor: 'black',\n      zIndex: 1,\n      position: 'absolute',\n      left: 0,\n      top: 110\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"left\",\n    style: {\n      position: 'absolute',\n      top: 5,\n      left: 5,\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), []);\n  const rightArrow = useMemo(() => __jsx(\"div\", {\n    style: {\n      borderWidth: 2,\n      borderRadius: 30,\n      width: 30,\n      height: 30,\n      backgroundColor: '#FFFFFF',\n      borderColor: 'black',\n      zIndex: 1,\n      position: 'absolute',\n      right: 0,\n      top: 110\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"right\",\n    style: {\n      position: 'absolute',\n      top: 5,\n      left: 5,\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))), []);\n  return __jsx(Carousel, {\n    additionalTransfrom: 0,\n    autoPlaySpeed: 3000,\n    centerMode: false,\n    className: \"\",\n    containerClass: \"container-with-dots\",\n    dotListClass: \"\",\n    draggable: true,\n    focusOnSelect: false,\n    infinite: true,\n    itemClass: \"\",\n    keyBoardControl: true,\n    minimumTouchDrag: 80,\n    renderButtonGroupOutside: false,\n    renderDotsOutside: false,\n    customLeftArrow: leftArrow,\n    customRightArrow: rightArrow,\n    responsive: {\n      desktop: {\n        breakpoint: {\n          max: 3000,\n          min: 1024\n        },\n        items: 3,\n        partialVisibilityGutter: 40\n      },\n      mobile: {\n        breakpoint: {\n          max: 464,\n          min: 0\n        },\n        items: 1,\n        partialVisibilityGutter: 30\n      },\n      tablet: {\n        breakpoint: {\n          max: 1024,\n          min: 464\n        },\n        items: 2,\n        partialVisibilityGutter: 30\n      }\n    },\n    showDots: false,\n    sliderClass: \"\",\n    slidesToSlide: 1,\n    swipeable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, data === null || data === void 0 ? void 0 : (_data$selectTopRooms = data.selectTopRooms) === null || _data$selectTopRooms === void 0 ? void 0 : _data$selectTopRooms.map(item => __jsx(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(RoomCard, {\n    room: item,\n    width: \"full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nexport default RoomSlide;","map":{"version":3,"sources":["/Users/leejahun/practice/airbnb/web/components/RoomSlide.tsx"],"names":["React","useMemo","Carousel","useSelectTopRoomsQuery","RoomCard","Icon","RoomSlide","data","loading","leftArrow","borderWidth","borderRadius","width","height","backgroundColor","borderColor","zIndex","position","left","top","fontSize","rightArrow","right","desktop","breakpoint","max","min","items","partialVisibilityGutter","mobile","tablet","selectTopRooms","map","item","id"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useMemo } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { useSelectTopRoomsQuery } from \"../generated/graphql\";\nimport RoomCard from \"./RoomCard\";\nimport { Icon } from \"antd\";\n\ntype Props = {\n};\n\nconst RoomSlide: React.FunctionComponent<Props> = ({\n}) => {\n    const { data, loading } = useSelectTopRoomsQuery();\n    const leftArrow = useMemo(() => <div style={ \n        { borderWidth: 2, borderRadius: 30, width: 30, height: 30, backgroundColor: '#FFFFFF', borderColor: 'black', zIndex: 1, position: 'absolute', left: 0, top: 110 }\n     }><div style={{ position: 'relative' }}><Icon type=\"left\" style={{ position: 'absolute', top: 5, left: 5, fontSize: 15 }} /></div></div>, []);\n    const rightArrow = useMemo(() => <div style={ \n        { borderWidth: 2, borderRadius: 30, width: 30, height: 30, backgroundColor: '#FFFFFF', borderColor: 'black', zIndex: 1, position: 'absolute', right: 0, top: 110 }\n    }><div style={{ position: 'relative' }}><Icon type=\"right\" style={{ position: 'absolute', top: 5, left: 5, fontSize: 15 }} /></div></div>, []);\n    return (\n        <Carousel\n            additionalTransfrom={0}\n            autoPlaySpeed={3000}\n            centerMode={false}\n            className=\"\"\n            containerClass=\"container-with-dots\"\n            dotListClass=\"\"\n            draggable\n            focusOnSelect={false}\n            infinite\n            itemClass=\"\"\n            keyBoardControl\n            minimumTouchDrag={80}\n            renderButtonGroupOutside={false}\n            renderDotsOutside={false}\n            customLeftArrow={leftArrow}\n            customRightArrow={rightArrow}\n            responsive={{\n                desktop: {\n                    breakpoint: {\n                        max: 3000,\n                        min: 1024\n                    },\n                    items: 3,\n                    partialVisibilityGutter: 40\n                },\n                mobile: {\n                    breakpoint: {\n                        max: 464,\n                        min: 0\n                    },\n                    items: 1,\n                    partialVisibilityGutter: 30\n                },\n                tablet: {\n                    breakpoint: {\n                        max: 1024,\n                        min: 464\n                    },\n                    items: 2,\n                    partialVisibilityGutter: 30\n                }\n            }}\n            showDots={false}\n            sliderClass=\"\"\n            slidesToSlide={1}\n            swipeable\n        >\n            {\n                data?.selectTopRooms?.map(item => (\n                    <div key={ item.id }>\n                        <RoomCard room={ item as any } width={\"full\"} />\n                    </div>\n                ))\n            }\n        </Carousel>\n    );\n}\n\nexport default RoomSlide;"]},"metadata":{},"sourceType":"module"}