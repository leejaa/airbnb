{"version":3,"file":"static/webpack/static/development/pages/createRoom.js.52411c2dff530f91b36a.hot-update.js","sources":["webpack:///./components/CreateRoom.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useState, useMemo, useCallback, useEffect, useContext } from \"react\";\nimport { Popover, Calendar, Button, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport '../assets/scss/room.scss'\nimport { CreateRoomContext } from \"../pages/createRoom\";\nimport Map from \"./Map\";\nimport { ImageUpload } from \"./ImageUpload\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nmoment.locale('ko');\ntype Props = {\n};\n\nconst CreateRoom: React.FunctionComponent<Props> = ({\n}) => {\n    const [step, setStep] = useState(6);\n    const [isError, setIsError] = useState(false);\n    const [files, setFiles]: any = useState([]);\n    const [rule, setRule] = useState(\"\");\n    const [rules, setRules] = useState([]);\n    const [state, dispatch]: any = useContext(CreateRoomContext);\n    const [selectedDates, setSelectedDates] = useState<Array<string>>([]);\n    const [currentMonth, setCurrentMonth] = useState(moment().format(\"YYYY년 MM월\"));\n    const [currentSelectedDate, setCurrentSelectedDate] = useState(moment());\n    const tempSave = useCallback(() => {\n        window.localStorage.setItem('state', JSON.stringify(state));\n    }, [state]);\n    const onChange = useCallback(e => {\n        dispatch({ type: 'setConvenience', value: e.target.value });\n    }, [state]);\n    const goPrevStep = useCallback(() => {\n        let newStep = _.clone(step);\n        setStep(--newStep);\n    }, [step]);\n    const goNextStep = useCallback(() => {\n        let newStep = _.clone(step);\n        setStep(++newStep);\n    }, [step]);\n    const onChageRule = useCallback(e => {\n        setRule(e.target.value);\n        console.log('rule', rule);\n    }, [rule]);\n    const addRules = useCallback(e => {\n        const newRules = _.union(rules, [rule]);\n        setRules(newRules as any);\n        setRule(\"\");\n    }, [rules, rule]);\n    const removeRule = useCallback(index => {\n        const newRules = _.clone(rules);\n        _.pullAt(newRules, [index]);\n        setRules(newRules);\n    }, [rules]);\n    const options = useMemo(() => {\n        const option = { center: { lat: state.lat, lng: state.lng }, zoom: 15 };\n        return option;\n    }, [state]);\n    const links = useMemo(() => {\n        return [{\n            coords: { lat: state.lat, lng: state.lng }, // required: latitude & longitude\n            // at which to display the marker\n            title: `Life, the Universe and Area 51`, // optional\n            url: `https://wikipedia.org/wiki/Area_51`, // optional\n        }];\n    }, [state]);\n    const addMarkers = (links: { forEach: (arg0: (link: any, index: any) => void) => void; }) => (map: any) => {\n        links.forEach((link: any, index: any) => {\n            // const marker = new window.google.maps.Marker({\n            //     map,\n            //     position: link.coords,\n            //     label: `${index + 1}`,\n            //     title: link.title,\n            // })\n            // marker.addListener(`click`, () => {\n            //     window.location.href = link.url\n            // })\n        })\n    }\n    const setCurrentLocation = async () => {\n        const geoInfo = await axios.post(\n            'https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBBT02YSLxubEfcSxZA9UIiqy3rxD0pHfc'\n        );\n        if (geoInfo) {\n            const { data: { location: { lat = 0, lng = 0 } } } = geoInfo;\n            const locationInfo = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyBBT02YSLxubEfcSxZA9UIiqy3rxD0pHfc`);\n            const { data: { results } } = locationInfo;\n            if (!_.isEmpty(results)) {\n                const address = results[0].formatted_address || '';\n                const { plus_code: { global_code = '' } } = results[0];\n                dispatch({ type: 'setLat', value: lat });\n                dispatch({ type: 'setLng', value: lng });\n                dispatch({ type: 'setAddress', value: address.split(' ') });\n                dispatch({ type: 'setPostcode', value: global_code });\n            }\n        }\n    };\n    const addFile = (file: { map: (arg0: (file: any) => any) => void; }) => {\n        console.log(file);\n        // this.setState({\n        //     files: file.map((file: any) =>\n        //         Object.assign(file, {\n        //             preview: URL.createObjectURL(file)\n        //         })\n        //     )\n        // });\n        setFiles({\n            files: file.map((file: any) =>\n                Object.assign(file, {\n                    preview: URL.createObjectURL(file)\n                })\n            )\n        } as any);\n    };\n    const setDisableDate = useCallback(current => {\n        return current && current < moment().endOf('day');\n    }, []);\n    const onDateSelect = useCallback(date => {\n        setCurrentMonth(moment(date).format('YYYY년 MM월'));\n        setCurrentSelectedDate(moment(date));\n        let newSelectedDates = _.clone(selectedDates);\n        if (_.includes(selectedDates, moment(date).format('YYYY-MM-DD'))) {\n            newSelectedDates = _.pull(selectedDates, moment(date).format('YYYY-MM-DD'));\n        } else {\n            newSelectedDates = _.union(selectedDates, [moment(date).format('YYYY-MM-DD')]);\n        }\n        setSelectedDates(newSelectedDates);\n    }, [selectedDates, currentMonth, currentSelectedDate]);\n    const dateFullCellRender = useCallback((date) => {\n        const overrideStyle = { backgroundColor: 'white' };\n        return (\n            <div className=\"ant-fullcalendar-date\" style={_.includes(selectedDates, moment(date).format('YYYY-MM-DD')) ? overrideStyle : {}}>\n                <div className=\"ant-fullcalendar-value\">{moment(date).format('DD')}</div>\n                <div className=\"ant-fullcalendar-content\"></div>\n            </div>\n        );\n    }, [selectedDates]);\n    const headerRender = useCallback(() => {\n        return (\n            <div>\n                <ButtonGroup>\n                    <Button>\n                        <Icon type=\"left\" />\n                    </Button>\n                    <Button onClick={ () => alert('1')}>\n                    <Icon type=\"right\" />\n                    </Button>\n                </ButtonGroup>\n                <span\n                    style={ { marginLeft: 30, fontSize: 20 } }\n                >\n                    { currentMonth }\n                </span>\n            </div>\n        );\n    }, [ currentMonth, currentSelectedDate ]);\n    const onPanelChange = useCallback( date => {\n    }, []);\n    useEffect(() => {\n        return () => {\n            let newFiles = _.clone(files);\n            newFiles.forEach((file: { preview: string; }) => URL.revokeObjectURL(file.preview));\n        }\n    });\n    const content = useMemo(() => {\n        return (\n            <div>\n                <p>Content</p>\n                <p>Content</p>\n            </div>\n        );\n    }, []);\n    return (\n        <div className=\"cotainer max-w-4xl mx-auto my-64 flex flex-col items-center border p-6 border-gray-400\">\n            <button onClick={tempSave}>임시저장</button>\n            {\n                isError && (\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-10 py-3 rounded relative\" role=\"alert\">\n                        <strong className=\"font-bold\">입력란을 채워주셔야 합니다.</strong>\n                        <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3 ml-3\">\n                            <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><title>Close</title><path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" /></svg>\n                        </span>\n                    </div>\n                )\n            }\n            {\n                step === 1 && (\n                    <div className=\"w-full max-w-2xl\">\n                        <div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-lg\">등록하실 숙소의 종류는 무엇인가요?</p>\n                            </div>\n                            <div className=\"flex items-center border-b border-b-2 border-gray-500 py-2\">\n                                <button className={`${state.houseType === 'apartment' ? 'bg-gray-900 text-white' : 'bg-transparent'} hover:bg-gray-900 font-semibold hover:text-white py-2 px-4 border border-gray-900 hover:border-transparent rounded mr-2`} onClick={() => dispatch({ type: 'setHouseType', value: 'apartment' })}>\n                                    아파트\n                                </button>\n                                <button className={`${state.houseType === 'jootek' ? 'bg-gray-900 text-white' : 'bg-transparent'} hover:bg-gray-900 font-semibold hover:text-white py-2 px-4 border border-gray-900 hover:border-transparent rounded mr-2`} onClick={() => dispatch({ type: 'setHouseType', value: 'jootek' })}>\n                                    주택\n                                </button>\n                                <button className={`${state.houseType === 'hotel' ? 'bg-gray-900 text-white' : 'bg-transparent'} hover:bg-gray-900 font-semibold hover:text-white py-2 px-4 border border-gray-900 hover:border-transparent rounded mr-2`} onClick={() => dispatch({ type: 'setHouseType', value: 'hotel' })}>\n                                    호텔\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-lg\">게스트가 묵게될 숙소의 유형을 골라주세요.</p>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"radio\" className=\"w-8\" name=\"all\" value=\"all\" checked={state.houseRadio === 'all'} onChange={() => dispatch({ type: 'setHouseRadio', value: 'all' })} />\n                                    <span>집 전체</span>\n                                </label>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"radio\" className=\"w-8\" checked={state.houseRadio === 'individual'} onChange={() => dispatch({ type: 'setHouseRadio', value: 'individual' })} />\n                                    <span>개인실</span>\n                                </label>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"radio\" className=\"w-8\" checked={state.houseRadio === 'multi'} onChange={() => dispatch({ type: 'setHouseRadio', value: 'multi' })} />\n                                    <span>다인실</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-lg\">어떤 편의시설을 제공하시나요?</p>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"checkbox\" className=\"w-8\" checked={_.includes(state.convenience, 'aircon')} value=\"aircon\" onChange={onChange} />\n                                    <span className=\"ml-2\">에어컨</span>\n                                </label>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"checkbox\" className=\"w-8\" checked={_.includes(state.convenience, 'refrigerator')} value=\"refrigerator\" onChange={onChange} />\n                                    <span className=\"ml-2\">냉장고</span>\n                                </label>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <label className=\"inline-flex items-center\">\n                                    <input type=\"checkbox\" className=\"w-8\" checked={_.includes(state.convenience, 'washer')} value=\"washer\" onChange={onChange} />\n                                    <span className=\"ml-2\">세탁기</span>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            {\n                step === 2 && (\n                    <div className=\"w-full max-w-2xl\">\n                        <div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-lg\">숙소의 위치는 어디인가요?</p>\n                            </div>\n                            <div className=\"flex items-center border-b border-b-2 border-gray-500 py-2\">\n                                <button className={`bg-transparent font-semibold py-2 px-4 border-2 border-green-600 rounded mr-2 text-green-600`} onClick={setCurrentLocation}>\n                                    현재위치 사용\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"-mx-3 md:flex mb-6\">\n                                <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\n                                    <span>시/도</span>\n                                    <input className=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3\" id=\"grid-first-name\" type=\"text\" placeholder=\"시/도\" value={!_.isEmpty(state.address) ? `${state.address[2]} ${state.address[3]}` : ''} />\n                                </div>\n                                <div className=\"md:w-1/2 px-3\">\n                                    <span>시/군/구</span>\n                                    <input className=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"grid-last-name\" type=\"text\" placeholder=\"시/군/구\" value={!_.isEmpty(state.address) ? `${state.address[4]}` : ''} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"-mx-3 mb-6\">\n                                <div className=\"md:w-2/2 px-3 mb-6 md:mb-0\">\n                                    <span>도로명주소</span>\n                                    <input className=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3\" id=\"grid-first-name\" type=\"text\" placeholder=\"도로명주소\" value={!_.isEmpty(state.address) ? `${state.address[0]} ${state.address[1]} ${state.address[2]} ${state.address[3]} ${state.address[4]}` : ''} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"-mx-3 md:flex mb-6\">\n                                <div className=\"md:w-1/2 px-3 mb-6 md:mb-0\">\n                                    <span>우편번호</span>\n                                    <input className=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3\" id=\"grid-first-name\" type=\"text\" placeholder=\"우편번호\" value={state.postCode} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            {\n                step === 3 && (\n                    <div className=\"w-full max-w-2xl\">\n                        {/* <Map\n                            options={options}\n                            onMount={addMarkers(links)}\n                        /> */}\n                    </div>\n                )\n            }\n            {\n                step === 4 && (\n                    <div className=\"w-full max-w-2xl\">\n                        <div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-lg\">숙소사진 올리기</p>\n                            </div>\n                        </div>\n                        <div>\n                            {\n                                state.imageUrl ? (\n                                    <img src={state.imageUrl} />\n                                ) : (\n                                        <ImageUpload\n                                            state={state}\n                                            dispatch={dispatch}\n                                        />\n                                    )\n                            }\n                        </div>\n                    </div>\n                )\n            }\n            {\n                step === 5 && (\n                    <div className=\"w-full max-w-2xl\">\n                        <div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-3xl font-bold\">게스트가 지켜야할 이용규칙을 정하세요</p>\n                            </div>\n                            <div className=\"flex items-center py-2 relative\">\n                                <p className=\"text-lg\">어린이 숙박에 적합함</p>\n                                <Popover content={content} title=\"Title\" placement=\"right\">\n                                    <i className=\"material-icons\" style={{ marginBottom: 15, marginLeft: 5 }}>notification_important</i>\n                                </Popover>\n                                <div className=\"absolute right-0\">\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 bg-green-700 rounded mr-2 rounded-full pl-2\">\n                                        <svg className=\"fill-current w-4 h-4 text-white\" viewBox=\"0 0 20 20\"><path d=\"M0 11l2-2 5 5L18 3l2 2L7 18z\" /></svg>\n                                    </button>\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 border border-gray-400 bg-white rounded mr-2 rounded-full pl-1\">\n                                        <svg className=\"fill-current text-gray-600\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                                            <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"flex items-center py-2 relative\">\n                                <p className=\"text-lg\">유아 숙박에 적합함</p>\n                                <div className=\"absolute right-0\">\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 bg-green-700 rounded mr-2 rounded-full pl-2\">\n                                        <svg className=\"fill-current w-4 h-4 text-white\" viewBox=\"0 0 20 20\"><path d=\"M0 11l2-2 5 5L18 3l2 2L7 18z\" /></svg>\n                                    </button>\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 border border-gray-400 bg-white rounded mr-2 rounded-full pl-1\">\n                                        <svg className=\"fill-current text-gray-600\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                                            <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"flex items-center py-2 relative\">\n                                <p className=\"text-lg\">반려동물 숙박에 적합함</p>\n                                <div className=\"absolute right-0\">\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 bg-green-700 rounded mr-2 rounded-full pl-2\">\n                                        <svg className=\"fill-current w-4 h-4 text-white\" viewBox=\"0 0 20 20\"><path d=\"M0 11l2-2 5 5L18 3l2 2L7 18z\" /></svg>\n                                    </button>\n                                    <button className=\"font-semibold hover:text-white w-8 h-8 border border-gray-400 bg-white rounded mr-2 rounded-full pl-1\">\n                                        <svg className=\"fill-current text-gray-600\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                                            <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"flex items-center py-2 mt-3\">\n                                <p className=\"text-2xl font-bold\">추가규칙</p>\n                            </div>\n                            {\n                                rules.map((rule, index) => {\n                                    return (\n                                        <div className=\"flex relative items-center\">\n                                            <p className=\"text-lg\">{rule}</p>\n                                            <div className=\"absolute right-0\">\n                                                <button className=\"font-semibold hover:text-white w-8 h-8 bg-white rounded mr-2 rounded-full pl-1\" onClick={() => removeRule(index)}>\n                                                    <svg className=\"fill-current text-gray-600\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                                                        <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                                                    </svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div>\n                                <div className=\"inline-block mt-2 w-3/4\">\n                                    <input className=\"w-full py-3 text-gray-700 h-12\" type=\"text\" placeholder=\"조용히 해야하는 시간\" onChange={onChageRule} />\n                                </div>\n                                <div className=\"inline-block mt-2 w-1/4\">\n                                    <button className=\"w-full py-3 text-gray-700 border border-gray-500 h-12\" onClick={addRules}>추가</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            {\n                step === 6 && (\n                    <div className=\"w-full max-w-3xl\">\n                        <div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-3xl font-bold\">달력을 업데이트하세요</p>\n                            </div>\n                            <div className=\"flex items-center py-2\">\n                                <p className=\"text-xl\">예약을 차단하거나 차단 해제할 날짜를 선택하세요.</p>\n                            </div>\n                        </div>\n                        <div>\n                            <Calendar\n                                disabledDate={setDisableDate}\n                                onSelect={onDateSelect}\n                                dateFullCellRender={dateFullCellRender}\n                                headerRender={headerRender}\n                                onPanelChange={ onPanelChange }\n                                defaultValue={ currentSelectedDate }\n                            />\n                        </div>\n                    </div>\n                )\n            }\n            <div className=\"inline-flex my-5\">\n                <button className=\"bg-gray-300 hover:bg-gray-400 font-bold py-2 px-4 rounded-l bg-green-700 text-white\" onClick={goPrevStep}>\n                    이전\n            </button>\n                <button className=\"bg-gray-300 hover:bg-gray-400 font-bold py-2 px-4 rounded-r ml-50vh bg-green-600 text-white\" onClick={goNextStep}>\n                    다음\n            </button>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateRoom;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AALA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAisourceRoot":""}