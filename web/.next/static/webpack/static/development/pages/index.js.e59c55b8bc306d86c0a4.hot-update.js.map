{"version":3,"file":"static/webpack/static/development/pages/index.js.e59c55b8bc306d86c0a4.hot-update.js","sources":["webpack:///./components/RoomList.tsx"],"sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from \"react\";\nimport { CircleSpinner } from \"react-spinners-kit\";\nimport RoomCard from \"./RoomCard\";\nimport RoomSlide from \"./RoomSlide\";\nimport { useSelectRoomsQuery, useSelectTopRoomsQuery } from \"../generated/graphql\";\n\ntype Props = {\n};\n\nconst RoomList: React.FunctionComponent<Props> = ({\n\n}) => {\n    const { data, loading, fetchMore, networkStatus, refetch } = useSelectRoomsQuery({\n        variables: { skip: 0, take: 12 },\n        notifyOnNetworkStatusChange: true,\n    });\n    const { data : data2 } = useSelectTopRoomsQuery();\n    if (!data || !data2) {\n        return (\n            <div>로딩중...</div>\n        );\n    }\n    const onScroll = useCallback(() => {\n        if (window.scrollY + document.documentElement?.clientHeight > document.documentElement?.scrollHeight - 10) {\n            // fetchMore({\n            //     variables: {\n            //         skip: 0,\n            //         take: data?.selectRooms.length + 8\n            //     },\n            //     updateQuery: (pv, { fetchMoreResult }) => {\n            //         if (!fetchMoreResult) {\n            //             return pv;\n            //         }\n            //         return {\n            //             // __typename: \"Room\",\n            //             selectRooms: [\n            //                 ...fetchMoreResult.selectRooms\n            //             ]\n            //         };\n            //     }\n            // });\n        }\n    }, [ data.selectRooms.length ]);\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n          window.removeEventListener('scroll', onScroll);\n        };\n    }, [data.selectRooms.length]);\n    return (\n        <div className=\"container mx-auto pb-10\">\n            <div className=\"rounded-xl -mx-40 h-50vh mb-24 bg-cover bg-center\">\n                <div className=\"mx-5 my-16 mb-10 mt-24\">\n                    <RoomSlide />\n                    <div className=\"flex flex-wrap\">\n                        {\n                            data.selectRooms.map((room, i) => (\n                                <RoomCard room={room as any} key={ i } width={\"1/4\"}/>\n                            ))\n                        }\n                        <div style={ { borderWidth: 2, borderColor: 'black', width: '100%' } }>\n                            <CircleSpinner size={30} color=\"#686769\" loading={true} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RoomList;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}