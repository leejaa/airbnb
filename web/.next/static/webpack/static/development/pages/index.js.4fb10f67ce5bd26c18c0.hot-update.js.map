{"version":3,"file":"static/webpack/static/development/pages/index.js.4fb10f67ce5bd26c18c0.hot-update.js","sources":["webpack:///./components/RoomCard.tsx","webpack:///./components/RoomList.tsx","webpack:///./components/RoomSlide.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\"\nimport { Room } from \"../generated/graphql\";\nimport 'antd/dist/antd.css';\nimport { Carousel, Icon } from 'antd';\nimport '../assets/scss/room.scss';\ntype Props = {\n    room: Room,\n    width: string\n};\n\nconst RoomCard: React.FunctionComponent<Props> = ({\n    room\n}) => {\n    const [isShowArrow, setIsShowArrow] = useState(false);\n    const [isHoverArrowLeft, setIsHoverArrowLeft] = useState(false);\n    const [isHoverArrowRight, setIsHoverArrowRight] = useState(false);\n    const carouselRef : any = useRef();\n    const fnNextPrev = useCallback(direction => {\n        switch (direction) {\n            case 'right':\n                carouselRef.current.next();\n                break;\n            case 'left':\n                carouselRef.current.prev();\n                break;\n            default:\n                break;\n        }\n    }, []);\n    return (\n        <div className=\"w-1/4 mb-10 px-2 overflow-hidden\" style={{ position: 'relative' }} onMouseOver={() => setIsShowArrow(true)} onMouseLeave={() => setIsShowArrow(false)}>\n            <Carousel\n                ref={carouselRef}\n                autoplay={true}\n            >\n                {\n                    room?.photoConnection.map((photo, index) => (\n                        <div key={index}>\n                            <div className=\"w-full h-64 bg-cover bg-center rounded-lg mb-2 \" style={{ backgroundImage: `url(\"${room.photoConnection[index].file}\")` }}></div>\n                        </div>\n                    ))\n                }\n            </Carousel>\n            <div\n                style={{\n                    borderWidth: 1, borderRadius: 30, width: 25, height: 25, backgroundColor: '#FFFFFF', zIndex: 1, position: 'absolute',\n                    top: 108, left: 15, paddingBottom: 8, paddingLeft: 3, display: `${isShowArrow ? 'inline' : 'none'}`, cursor: 'pointer',\n                    boxShadow: `${isHoverArrowLeft ? '1.5px 1.5px 1.5px 1.5px gray' : ''}`\n                }}\n                onMouseOver={() => setIsHoverArrowLeft(true)}\n                onMouseLeave={() => setIsHoverArrowLeft(false)}\n            >\n                <div style={{ position: 'relative' }} onClick={ () => fnNextPrev('left') }><Icon type=\"left\" style={{ position: 'absolute', top: 5, fontSize: isHoverArrowLeft ? 18 : 15 }} /></div>\n            </div>\n            <div\n                style={{\n                    borderWidth: 1, borderRadius: 30, width: 25, height: 25, backgroundColor: '#FFFFFF', zIndex: 1, position: 'absolute',\n                    top: 108, right: 15, paddingBottom: 8, paddingLeft: 3, display: `${isShowArrow ? 'inline' : 'none'}`, cursor: 'pointer',\n                    boxShadow: `${isHoverArrowRight ? '1.5px 1.5px 1.5px 1.5px gray' : ''}`\n                }}\n                onMouseOver={() => setIsHoverArrowRight(true)}\n                onMouseLeave={() => setIsHoverArrowRight(false)}\n\n            >\n                <div style={{ position: 'relative' }} onClick={ () => fnNextPrev('right') }><Icon type=\"right\" style={{ position: 'absolute', top: 5, fontSize: isHoverArrowRight ? 18 : 15 }} /></div>\n            </div>\n            <div className=\"flex justify-between mb-2 truncate\">\n                <div className=\"w-4/5 overflow-hidden flex\">\n                    {room.name}\n                    <span className=\"mr-2 uppercase font-medium text-xs border border-black text-black rounded py-px px-1\">집주인</span>\n                    <span className=\"text-sm text-gray-600 block truncate\">{`${room.city} ${room.address}`}</span>\n                </div>\n                <span className=\"text-sm flex items-center\">\n                    <i className=\"fas fa-star text-red-500 text-xs mr-1\"></i> {room.price}\n                </span>\n            </div>\n            <span className=\"text-black w-11/12 block truncate\">{room.description}</span>\n        </div>\n    );\n}\n\nexport default RoomCard;","import React, { useEffect, useCallback, useState, useRef } from \"react\";\nimport RoomCard from \"./RoomCard\";\nimport RoomSlide from \"./RoomSlide\";\nimport { useSelectRoomsQuery, useSelectTopRoomsQuery } from \"../generated/graphql\";\n\ntype Props = {\n};\n\nconst RoomList: React.FunctionComponent<Props> = ({\n\n}) => {\n    const { data, loading, fetchMore, networkStatus, refetch } = useSelectRoomsQuery({\n        variables: { skip: 0, take: 12 },\n        notifyOnNetworkStatusChange: true,\n    });\n    const { data : data2 } = useSelectTopRoomsQuery();\n    if (!data || !data2) {\n        return (\n            <div>로딩중...</div>\n        );\n    }\n    const onScroll = useCallback(() => {\n        if (window.scrollY + document.documentElement?.clientHeight > document.documentElement?.scrollHeight - 10) {\n            fetchMore({\n                variables: {\n                    skip: data.selectRooms.length,\n                    take: data.selectRooms.length + 4\n                },\n                updateQuery: (pv, { fetchMoreResult }) => {\n                    if (!fetchMoreResult) {\n                        return pv;\n                    }\n                    return {\n                        // __typename: \"Room\",\n                        selectRooms: [\n                            ...pv.selectRooms,\n                            ...fetchMoreResult.selectRooms\n                        ]\n                    };\n                }\n            });\n        }\n    }, [ data.selectRooms.length ]);\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n          window.removeEventListener('scroll', onScroll);\n        };\n    }, [data.selectRooms.length]);\n    return (\n        <div className=\"container mx-auto pb-10\">\n            <div className=\"rounded-xl -mx-40 h-50vh mb-24 bg-cover bg-center\">\n                <div className=\"mx-5 my-16 mb-10 mt-24\">\n                    <RoomSlide />\n                    <div className=\"flex flex-wrap\">\n                        {\n                            data.selectRooms.map((room, i) => (\n                                <RoomCard room={room as any} key={ i } width={\"1/4\"}/>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RoomList;","import React, { useState, useRef, useCallback } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { useSelectTopRoomsQuery } from \"../generated/graphql\";\nimport RoomCard from \"./RoomCard\";\n\ntype Props = {\n};\n\nconst RoomSlide: React.FunctionComponent<Props> = ({\n}) => {\n    const { data, loading } = useSelectTopRoomsQuery();\n    return (\n        <Carousel\n            additionalTransfrom={0}\n            arrows\n            autoPlaySpeed={3000}\n            centerMode={false}\n            className=\"\"\n            containerClass=\"container-with-dots\"\n            dotListClass=\"\"\n            draggable\n            focusOnSelect={false}\n            infinite\n            itemClass=\"\"\n            keyBoardControl\n            minimumTouchDrag={80}\n            renderButtonGroupOutside={false}\n            renderDotsOutside={false}\n            responsive={{\n                desktop: {\n                    breakpoint: {\n                        max: 3000,\n                        min: 1024\n                    },\n                    items: 3,\n                    partialVisibilityGutter: 40\n                },\n                mobile: {\n                    breakpoint: {\n                        max: 464,\n                        min: 0\n                    },\n                    items: 1,\n                    partialVisibilityGutter: 30\n                },\n                tablet: {\n                    breakpoint: {\n                        max: 1024,\n                        min: 464\n                    },\n                    items: 2,\n                    partialVisibilityGutter: 30\n                }\n            }}\n            showDots={false}\n            sliderClass=\"\"\n            slidesToSlide={1}\n            swipeable\n        >\n            {\n                data?.selectTopRooms?.map(item => (\n                    <div key={ item.id }>\n                        <RoomCard room={ item as any } width={\"full\"} />\n                    </div>\n                ))\n            }\n        </Carousel>\n    );\n}\n\nexport default RoomSlide;"],"mappings":"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","sourceRoot":""}