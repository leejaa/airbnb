{"version":3,"sources":["/Users/leejahun/practice/airbnb/app/src/reducer/HomeReducer.ts","/Users/leejahun/practice/airbnb/app/src/AuthProvider.tsx","/Users/leejahun/practice/airbnb/app/src/screens/Center.tsx","/Users/leejahun/practice/airbnb/app/src/UserContext.ts","/Users/leejahun/practice/airbnb/app/generated/graphql.tsx","/Users/leejahun/practice/airbnb/app/src/screens/Detail.tsx","/Users/leejahun/practice/airbnb/app/src/screens/RoomDetail.tsx","/Users/leejahun/practice/airbnb/app/src/components/Review.tsx","/Users/leejahun/practice/airbnb/app/src/screens/Reviews.tsx","/Users/leejahun/practice/airbnb/app/src/components/Headers.tsx","/Users/leejahun/practice/airbnb/app/src/screens/FindReviews.tsx","/Users/leejahun/practice/airbnb/app/src/addHomeRoutes.tsx","/Users/leejahun/practice/airbnb/app/src/constants.ts","/Users/leejahun/practice/airbnb/app/src/components/RoomCard.tsx","/Users/leejahun/practice/airbnb/app/src/screens/Home.tsx","/Users/leejahun/practice/airbnb/app/src/HomeStack.tsx","/Users/leejahun/practice/airbnb/app/src/SearchStack.tsx","/Users/leejahun/practice/airbnb/app/src/AppTabs.tsx","/Users/leejahun/practice/airbnb/app/src/AuthStack.tsx","/Users/leejahun/practice/airbnb/app/src/Routes.tsx","/Users/leejahun/practice/airbnb/app/src/lib/apolloClient.ts","/Users/leejahun/practice/airbnb/app/App.tsx","/Users/leejahun/practice/airbnb/app/src/Providers.tsx","/Users/leejahun/practice/airbnb/app/web-build/register-service-worker.js","/Users/leejahun/practice/airbnb/app/node_modules/moment/locale sync /^/.//.*$"],"names":["initialState","isModalOpen","user","selectRooms","roomId","homeReducer","state","action","type","value","Error","AuthContext","createContext","AuthProvider","children","useReducer","dispatch","useEffect","a","async","publicIP","then","ip","console","log","catch","error","Provider","Center","View","style","flex","alignItems","justifyContent","UserContext","SelectRoomsDocument","gql","useSelectRoomsQuery","baseOptions","ApolloReactHooks","SelectRoomDocument","useSelectRoomQuery","SelectAllRoomsDocument","CreateLikeDocument","Dimensions","get","width","styles","StyleSheet","create","container","wrapper","borderWidth","borderColor","marginLeft","height","marginTop","wrapper2","slide","backgroundColor","slide1","slide2","slide3","text","color","fontSize","fontWeight","image","Detail","route","navigation","useState","useContext","data","loading","ScrollView","selectAllRooms","slice","map","item","key","id","position","right","zIndex","top","Ionicons","name","size","Image","resizeMode","source","uri","photoConnection","file","marginBottom","flexDirection","title","titleStyle","containerStyle","borderRadius","buttonStyle","Text","description","FULL_HEIGHT","FULL_WIDTH","container1","paddingTop","Device","container2","paddingLeft","container3","container4","modalContainer","borderTopWidth","borderTopColor","bottom","modalContainer2","container5","marginRight","container6","container7","avatarContainer","container8","container9","container10","container11","container12","avatarContainer2","container13","container14","container15","container16","paddingRight","container17","RoomDetail","variables","parseInt","params","ActivityIndicator","loop","controlsProps","prevTitle","nextTitle","selectRoom","photo","rounded","avatar","region","latitude","longitude","latitudeDelta","longitudeDelta","coordinate","Feather","reviews","moment","_","replace","createdAt","format","review","TouchableOpacity","onPress","navigate","length","Review","Reviews","page","setPage","onScroll","layoutMeasurement","contentOffset","contentSize","y","isCloseToBottom","nativeEvent","newPage","clone","scrollEventThrottle","AntDesign","borderBottomColor","borderBottomWidth","FindReviews","searchword","setSearchword","changedword","setChangedword","onChangeText","useCallback","onEndEditing","newChangedword","useMemo","filter","o","includes","TextInput","placeholder","onBlur","addHomeRoutes","Stack","Screen","component","options","headers","headerTitle","headerRight","HeaderRight","headerLeft","goBack","HeaderLeft","uuidv1","require","DotComponent","ActiveDotComponent","LikeContainer","RoomCard","room","createLike","meData","skip","take","useApolloClient","readFragment","fragment","initialIsLike","isLike","likeUsers","likeUser","some","me","like","setLike","onPressLike","userId","update","cache","refetchQueries","query","onPressDetail","index","isActive","score","Math","floor","price","Home","notifyOnNetworkStatusChange","fetchMore","networkStatus","refetch","window","addEventListener","removeEventListener","updateQuery","pv","fetchMoreResult","__typename","createStackNavigator","HomeStack","setOptions","tabBarVisible","Navigator","screenOptions","cardStyleInterpolator","CardStyleInterpolators","forRevealFromBottomAndroid","initialRouteName","Search","SearchStack","Tabs","createBottomTabNavigator","AppTabs","tabBarIcon","focused","iconName","EvilIcons","tabBarOptions","activeTintColor","inactiveTintColor","Routes","client","writeFragment","email","NavigationContainer","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","subscribe","next","bind","complete","unsubscribe","authLink","setContext","_request","token","authorization","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","fetchAccessToken","fetch","method","credentials","handleFetch","accessToken","handleError","err","warn","onError","graphQLErrors","networkError","HttpLink","Providers","navigator","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","e","code","keys","Object","module","exports"],"mappings":"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AW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAAS4P,EAAeC,GACvB,IAAI1P,EAAK2P,EAAsBD,GAC/B,OAAOE,EAAoB5P,GAE5B,SAAS2P,EAAsBD,GAC9B,IAAIE,EAAoB3I,EAAEpH,EAAK6P,GAAM,CACpC,IAAIG,EAAI,IAAIpU,MAAM,uBAAyBiU,EAAM,KAEjD,MADAG,EAAEC,KAAO,mBACHD,EAEP,OAAOhQ,EAAI6P,GAEZD,EAAeM,KAAO,WACrB,OAAOC,OAAOD,KAAKlQ,IAEpB4P,EAAepC,QAAUsC,EACzBM,EAAOC,QAAUT,EACjBA,EAAezP,GAAK,M","file":"static/js/app.5c7573ca.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport _ from 'lodash';\n\nexport const initialState = {\n    isModalOpen: false,\n    user: {},\n    selectRooms: [],\n    roomId: ''\n}\n\nexport const homeReducer = (state, action) => {\n  switch (action.type) {\n    case 'setIsModalOpen': {\n      return { ...state, isModalOpen: action.value };\n    }\n    case 'setUser': {\n      return { ...state, user: action.value };\n    }\n    case 'setSelectRooms': {\n      return { ...state, selectRooms: action.value };\n    }\n    case 'setRoomId': {\n      return { ...state, roomId: action.value };\n    }\n    default: {\n      throw new Error(`unexpected action.type: ${action.type}`)\n    }\n  }\n}","import React, { useState, useReducer, useEffect, createContext } from \"react\";\nimport { AsyncStorage } from \"react-native\";\nimport publicIP from 'react-native-public-ip';\nimport { homeReducer, initialState } from \"./reducer/HomeReducer\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\n\ntype User = null | { username: string };\n\nexport const AuthContext = createContext<any>(null);\n\ninterface AuthProviderProps { }\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(homeReducer, initialState);\n  const initialAction = async () => {\n    publicIP()\n      .then(ip => {\n        console.log(ip);\n        // '47.122.71.234'\n      })\n      .catch(error => {\n        console.log(error);\n        // 'Unable to get IP address.'\n      });\n  };\n  useEffect(() => {\n    initialAction();\n  }, []);\n  return (\n    <AuthContext.Provider\n      value={[state, dispatch]}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\n\ninterface CenterProps {}\n\nexport const Center: React.FC<CenterProps> = ({ children }) => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","import { createContext } from \"react\";\n\nexport interface AuthPayload {\n  token: string;\n  user: {\n    id: string;\n    username: string;\n  };\n}\n\nexport const UserContext = createContext<any>(null);","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any,\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any,\n};\n\nexport type Comment = {\n   __typename?: 'Comment',\n  nickname?: Maybe<Scalars['String']>,\n  content: Scalars['String'],\n  date: Scalars['DateTime'],\n};\n\nexport type CommentInput = {\n  recipeId: Scalars['ID'],\n  nickname?: Maybe<Scalars['String']>,\n  content: Scalars['String'],\n};\n\nexport type Conversation = {\n   __typename?: 'Conversation',\n  id: Scalars['Int'],\n  participants: Array<Scalars['JSON']>,\n};\n\n\nexport type Email = {\n   __typename?: 'Email',\n  nickname?: Maybe<Scalars['String']>,\n  content: Scalars['String'],\n  date: Scalars['DateTime'],\n};\n\nexport type EmailInput = {\n  recipeId: Scalars['ID'],\n  nickname?: Maybe<Scalars['String']>,\n  content: Scalars['String'],\n};\n\n\nexport type Like = {\n   __typename?: 'Like',\n  id: Scalars['ID'],\n  user: User,\n  room: Room,\n};\n\nexport type List = {\n   __typename?: 'List',\n  id: Scalars['Int'],\n  name: Scalars['String'],\n  user: Scalars['JSON'],\n  rooms: Array<Scalars['JSON']>,\n};\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  accessToken: Scalars['String'],\n  refreshToken: Scalars['String'],\n  user: User,\n};\n\nexport type Message = {\n   __typename?: 'Message',\n  id: Scalars['Int'],\n  message: Scalars['String'],\n  user: User,\n  conversation: Conversation,\n};\n\nexport type Movie = {\n   __typename?: 'Movie',\n  id: Scalars['Int'],\n  title: Scalars['String'],\n  minutes: Scalars['Int'],\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  logout: Scalars['Boolean'],\n  revokeRefreshTokensForUser: Scalars['Boolean'],\n  login: LoginResponse,\n  register: Scalars['Boolean'],\n  registerFake: Scalars['Boolean'],\n  updateUser: Scalars['Boolean'],\n  updateAllUser: Scalars['Boolean'],\n  deleteUser: Scalars['Boolean'],\n  push: Scalars['Boolean'],\n  createRoom: Room,\n  createFakeRoom: Room,\n  createPhoto: Photo,\n  createFakePhoto: Photo,\n  createFakeLike: Scalars['Boolean'],\n  createLike: Scalars['Boolean'],\n  createReviews: Scalars['Boolean'],\n  updateRoom: Room,\n  updateAllRooms: Scalars['Boolean'],\n  updateAllReviews: Scalars['Boolean'],\n  deleteAllRooms: Scalars['Boolean'],\n  deleteRoom: Scalars['Boolean'],\n  deleteAllPhotos: Scalars['Boolean'],\n  deletePhoto: Scalars['Boolean'],\n  deleteAllLikes: Scalars['Boolean'],\n  deleteAllReviews: Scalars['Boolean'],\n  addNewComment: Scalars['Boolean'],\n  requestAuthEmail: Scalars['Boolean'],\n  sendAuthEmail: Scalars['Boolean'],\n};\n\n\nexport type MutationRevokeRefreshTokensForUserArgs = {\n  userId: Scalars['Int']\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationRegisterArgs = {\n  name?: Maybe<Scalars['String']>,\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationUpdateUserArgs = {\n  id: Scalars['Float'],\n  input: UserInput\n};\n\n\nexport type MutationCreateRoomArgs = {\n  options: RoomInput\n};\n\n\nexport type MutationCreatePhotoArgs = {\n  options: PhotoInput\n};\n\n\nexport type MutationCreateLikeArgs = {\n  roomId: Scalars['Float'],\n  userId: Scalars['Float']\n};\n\n\nexport type MutationUpdateRoomArgs = {\n  id: Scalars['Float'],\n  options: RoomInput\n};\n\n\nexport type MutationDeleteRoomArgs = {\n  id: Scalars['Float']\n};\n\n\nexport type MutationDeletePhotoArgs = {\n  id: Scalars['Float']\n};\n\n\nexport type MutationAddNewCommentArgs = {\n  comment: CommentInput\n};\n\n\nexport type MutationRequestAuthEmailArgs = {\n  message: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationSendAuthEmailArgs = {\n  email: Scalars['String']\n};\n\nexport type Photo = {\n   __typename?: 'Photo',\n  id: Scalars['ID'],\n  caption: Scalars['String'],\n  file: Scalars['String'],\n  room: Room,\n};\n\nexport type PhotoInput = {\n  caption: Scalars['String'],\n  file: Scalars['String'],\n  roomId: Scalars['Float'],\n  hostId: Scalars['Float'],\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  hello: Scalars['String'],\n  bye: Scalars['String'],\n  users: Array<User>,\n  selectUser: User,\n  me?: Maybe<User>,\n  selectAllReviews: Array<Review>,\n  selectlReview: Review,\n  selectAllPhotos: Array<Photo>,\n  selectAllRooms: Array<Room>,\n  selectRooms: Array<Room>,\n  selectRoom: Room,\n  selectTopRooms: Array<Room>,\n  selectAllLikes: Array<Like>,\n  recipe?: Maybe<Recipe>,\n};\n\n\nexport type QuerySelectUserArgs = {\n  id: Scalars['Float']\n};\n\n\nexport type QuerySelectlReviewArgs = {\n  id: Scalars['Float']\n};\n\n\nexport type QuerySelectRoomsArgs = {\n  take: Scalars['Float'],\n  skip: Scalars['Float']\n};\n\n\nexport type QuerySelectRoomArgs = {\n  id: Scalars['Float']\n};\n\n\nexport type QueryRecipeArgs = {\n  id: Scalars['ID']\n};\n\nexport type Recipe = {\n   __typename?: 'Recipe',\n  id: Scalars['ID'],\n  title: Scalars['String'],\n  description?: Maybe<Scalars['String']>,\n  comments: Array<Comment>,\n};\n\nexport type Reservation = {\n   __typename?: 'Reservation',\n  id: Scalars['Int'],\n  check_in: Scalars['Int'],\n  check_out: Scalars['Int'],\n  guest: Scalars['JSON'],\n  room: Scalars['JSON'],\n  in_progress: Scalars['Boolean'],\n  is_finished: Scalars['Boolean'],\n};\n\nexport type Review = {\n   __typename?: 'Review',\n  id: Scalars['Int'],\n  review: Scalars['String'],\n  accuracy: Scalars['Int'],\n  communication: Scalars['Int'],\n  cleanliness: Scalars['Int'],\n  location: Scalars['Int'],\n  check_in: Scalars['Int'],\n  value: Scalars['Int'],\n  room: Room,\n  createdAt: Scalars['String'],\n  user: User,\n};\n\nexport type Room = {\n   __typename?: 'Room',\n  id: Scalars['ID'],\n  name: Scalars['String'],\n  description: Scalars['String'],\n  country: Scalars['String'],\n  city: Scalars['String'],\n  price: Scalars['Int'],\n  score: Scalars['Int'],\n  address: Scalars['String'],\n  guests: Scalars['Int'],\n  beds: Scalars['Int'],\n  bedrooms: Scalars['Int'],\n  baths: Scalars['Int'],\n  check_in: Scalars['Int'],\n  check_out: Scalars['Int'],\n  instant_book: Scalars['Boolean'],\n  houseType: Scalars['String'],\n  houseRadio: Scalars['String'],\n  convenience: Array<Scalars['String']>,\n  dates: Array<Scalars['String']>,\n  room_type: Scalars['String'],\n  post_code: Scalars['String'],\n  lat: Scalars['Float'],\n  lng: Scalars['Float'],\n  photoConnection: Array<Photo>,\n  user: User,\n  likeUsers: Array<Like>,\n  reviews: Array<Review>,\n};\n\nexport type RoomInput = {\n  houseType: Scalars['String'],\n  houseRadio: Scalars['String'],\n  convenience: Array<Scalars['String']>,\n  dates: Array<Scalars['String']>,\n  lat: Scalars['Float'],\n  lng: Scalars['Float'],\n  address: Scalars['String'],\n  post_code: Scalars['String'],\n  imageUrl: Scalars['String'],\n};\n\nexport type Subscription = {\n   __typename?: 'Subscription',\n  newComments: Comment,\n  newEmail: Scalars['JSON'],\n};\n\nexport type User = {\n   __typename?: 'User',\n  id: Scalars['ID'],\n  email: Scalars['String'],\n  name: Scalars['String'],\n  password: Scalars['String'],\n  avatar: Scalars['String'],\n  gender: Scalars['String'],\n  birthdate: Scalars['DateTime'],\n  language: Scalars['String'],\n  currentcy: Scalars['String'],\n  superhost: Scalars['Boolean'],\n  email_verified: Scalars['Boolean'],\n  email_secret: Scalars['String'],\n  login_method: Scalars['String'],\n  tokenVersion: Scalars['String'],\n  roomConnection: Array<Room>,\n  likeRooms: Array<Like>,\n  reviews: Array<Review>,\n};\n\nexport type UserInput = {\n  name: Scalars['String'],\n};\n\nexport type SelectRoomsQueryVariables = {\n  skip: Scalars['Float'],\n  take: Scalars['Float']\n};\n\n\nexport type SelectRoomsQuery = (\n  { __typename?: 'Query' }\n  & { selectRooms: Array<(\n    { __typename?: 'Room' }\n    & Pick<Room, 'id' | 'name' | 'city' | 'address' | 'description' | 'price' | 'score' | 'lat' | 'lng'>\n    & { photoConnection: Array<(\n      { __typename?: 'Photo' }\n      & Pick<Photo, 'id' | 'caption' | 'file'>\n    )>, likeUsers: Array<(\n      { __typename?: 'Like' }\n      & Pick<Like, 'id'>\n      & { user: (\n        { __typename?: 'User' }\n        & Pick<User, 'id' | 'name' | 'email'>\n      ) }\n    )> }\n  )> }\n);\n\nexport type SelectRoomQueryVariables = {\n  id: Scalars['Float']\n};\n\n\nexport type SelectRoomQuery = (\n  { __typename?: 'Query' }\n  & { selectRoom: (\n    { __typename?: 'Room' }\n    & Pick<Room, 'id' | 'name' | 'city' | 'address' | 'description' | 'price' | 'score' | 'lat' | 'lng'>\n    & { photoConnection: Array<(\n      { __typename?: 'Photo' }\n      & Pick<Photo, 'id' | 'caption' | 'file'>\n    )>, likeUsers: Array<(\n      { __typename?: 'Like' }\n      & Pick<Like, 'id'>\n      & { user: (\n        { __typename?: 'User' }\n        & Pick<User, 'id' | 'name' | 'email'>\n      ) }\n    )>, user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'avatar'>\n    ), reviews: Array<(\n      { __typename?: 'Review' }\n      & Pick<Review, 'id' | 'review' | 'createdAt'>\n      & { user: (\n        { __typename?: 'User' }\n        & Pick<User, 'id' | 'name' | 'avatar'>\n      ) }\n    )> }\n  ) }\n);\n\nexport type SelectTopRoomsQueryVariables = {};\n\n\nexport type SelectTopRoomsQuery = (\n  { __typename?: 'Query' }\n  & { selectTopRooms: Array<(\n    { __typename?: 'Room' }\n    & Pick<Room, 'id' | 'name' | 'city' | 'address' | 'description' | 'price' | 'score'>\n    & { photoConnection: Array<(\n      { __typename?: 'Photo' }\n      & Pick<Photo, 'id' | 'caption' | 'file'>\n    )> }\n  )> }\n);\n\nexport type SelectAllRoomsQueryVariables = {};\n\n\nexport type SelectAllRoomsQuery = (\n  { __typename?: 'Query' }\n  & { selectAllRooms: Array<(\n    { __typename?: 'Room' }\n    & Pick<Room, 'id' | 'name' | 'description' | 'country' | 'city' | 'price' | 'address'>\n    & { photoConnection: Array<(\n      { __typename?: 'Photo' }\n      & Pick<Photo, 'id' | 'caption' | 'file'>\n    )> }\n  )> }\n);\n\nexport type CreateRoomMutationVariables = {\n  options: RoomInput\n};\n\n\nexport type CreateRoomMutation = (\n  { __typename?: 'Mutation' }\n  & { createRoom: (\n    { __typename?: 'Room' }\n    & Pick<Room, 'id' | 'houseType' | 'houseRadio' | 'convenience' | 'dates' | 'lat' | 'lng' | 'address' | 'post_code'>\n  ) }\n);\n\nexport type CreateLikeMutationVariables = {\n  userId: Scalars['Float'],\n  roomId: Scalars['Float']\n};\n\n\nexport type CreateLikeMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createLike'>\n);\n\nexport type LoginMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken' | 'refreshToken'>\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'email'>\n    ) }\n  ) }\n);\n\nexport type LogoutMutationVariables = {};\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'name'>\n  )> }\n);\n\nexport type RegisterMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String'],\n  name?: Maybe<Scalars['String']>\n};\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'register'>\n);\n\nexport type RequestAuthEmailMutationVariables = {\n  email: Scalars['String'],\n  message: Scalars['String']\n};\n\n\nexport type RequestAuthEmailMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'requestAuthEmail'>\n);\n\nexport type NewEmailSubscriptionVariables = {};\n\n\nexport type NewEmailSubscription = (\n  { __typename?: 'Subscription' }\n  & Pick<Subscription, 'newEmail'>\n);\n\nexport type UsersQueryVariables = {};\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'avatar' | 'email'>\n    & { roomConnection: Array<(\n      { __typename?: 'Room' }\n      & Pick<Room, 'id' | 'name' | 'description'>\n      & { photoConnection: Array<(\n        { __typename?: 'Photo' }\n        & Pick<Photo, 'id' | 'file' | 'caption'>\n      )> }\n    )> }\n  )> }\n);\n\n\nexport const SelectRoomsDocument = gql`\n    query selectRooms($skip: Float!, $take: Float!) {\n  selectRooms(skip: $skip, take: $take) {\n    id\n    name\n    city\n    address\n    description\n    price\n    score\n    lat\n    lng\n    photoConnection {\n      id\n      caption\n      file\n    }\n    likeUsers {\n      id\n      user {\n        id\n        name\n        email\n      }\n    }\n  }\n}\n    `;\n\n    export function useSelectRoomsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SelectRoomsQuery, SelectRoomsQueryVariables>) {\n      return ApolloReactHooks.useQuery<SelectRoomsQuery, SelectRoomsQueryVariables>(SelectRoomsDocument, baseOptions);\n    }\n      export function useSelectRoomsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SelectRoomsQuery, SelectRoomsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<SelectRoomsQuery, SelectRoomsQueryVariables>(SelectRoomsDocument, baseOptions);\n      }\n      \nexport type SelectRoomsQueryHookResult = ReturnType<typeof useSelectRoomsQuery>;\nexport type SelectRoomsQueryResult = ApolloReactCommon.QueryResult<SelectRoomsQuery, SelectRoomsQueryVariables>;\nexport const SelectRoomDocument = gql`\n    query selectRoom($id: Float!) {\n  selectRoom(id: $id) {\n    id\n    name\n    city\n    address\n    description\n    price\n    score\n    lat\n    lng\n    photoConnection {\n      id\n      caption\n      file\n    }\n    likeUsers {\n      id\n      user {\n        id\n        name\n        email\n      }\n    }\n    user {\n      id\n      name\n      avatar\n    }\n    reviews {\n      id\n      review\n      createdAt\n      user {\n        id\n        name\n        avatar\n      }\n    }\n  }\n}\n    `;\n\n    export function useSelectRoomQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SelectRoomQuery, SelectRoomQueryVariables>) {\n      return ApolloReactHooks.useQuery<SelectRoomQuery, SelectRoomQueryVariables>(SelectRoomDocument, baseOptions);\n    }\n      export function useSelectRoomLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SelectRoomQuery, SelectRoomQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<SelectRoomQuery, SelectRoomQueryVariables>(SelectRoomDocument, baseOptions);\n      }\n      \nexport type SelectRoomQueryHookResult = ReturnType<typeof useSelectRoomQuery>;\nexport type SelectRoomQueryResult = ApolloReactCommon.QueryResult<SelectRoomQuery, SelectRoomQueryVariables>;\nexport const SelectTopRoomsDocument = gql`\n    query selectTopRooms {\n  selectTopRooms {\n    id\n    name\n    city\n    address\n    description\n    price\n    score\n    photoConnection {\n      id\n      caption\n      file\n    }\n  }\n}\n    `;\n\n    export function useSelectTopRoomsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SelectTopRoomsQuery, SelectTopRoomsQueryVariables>) {\n      return ApolloReactHooks.useQuery<SelectTopRoomsQuery, SelectTopRoomsQueryVariables>(SelectTopRoomsDocument, baseOptions);\n    }\n      export function useSelectTopRoomsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SelectTopRoomsQuery, SelectTopRoomsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<SelectTopRoomsQuery, SelectTopRoomsQueryVariables>(SelectTopRoomsDocument, baseOptions);\n      }\n      \nexport type SelectTopRoomsQueryHookResult = ReturnType<typeof useSelectTopRoomsQuery>;\nexport type SelectTopRoomsQueryResult = ApolloReactCommon.QueryResult<SelectTopRoomsQuery, SelectTopRoomsQueryVariables>;\nexport const SelectAllRoomsDocument = gql`\n    query selectAllRooms {\n  selectAllRooms {\n    id\n    name\n    description\n    country\n    city\n    price\n    address\n    photoConnection {\n      id\n      caption\n      file\n    }\n  }\n}\n    `;\n\n    export function useSelectAllRoomsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SelectAllRoomsQuery, SelectAllRoomsQueryVariables>) {\n      return ApolloReactHooks.useQuery<SelectAllRoomsQuery, SelectAllRoomsQueryVariables>(SelectAllRoomsDocument, baseOptions);\n    }\n      export function useSelectAllRoomsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SelectAllRoomsQuery, SelectAllRoomsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<SelectAllRoomsQuery, SelectAllRoomsQueryVariables>(SelectAllRoomsDocument, baseOptions);\n      }\n      \nexport type SelectAllRoomsQueryHookResult = ReturnType<typeof useSelectAllRoomsQuery>;\nexport type SelectAllRoomsQueryResult = ApolloReactCommon.QueryResult<SelectAllRoomsQuery, SelectAllRoomsQueryVariables>;\nexport const CreateRoomDocument = gql`\n    mutation createRoom($options: RoomInput!) {\n  createRoom(options: $options) {\n    id\n    houseType\n    houseRadio\n    convenience\n    dates\n    lat\n    lng\n    address\n    post_code\n  }\n}\n    `;\nexport type CreateRoomMutationFn = ApolloReactCommon.MutationFunction<CreateRoomMutation, CreateRoomMutationVariables>;\n\n    export function useCreateRoomMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateRoomMutation, CreateRoomMutationVariables>) {\n      return ApolloReactHooks.useMutation<CreateRoomMutation, CreateRoomMutationVariables>(CreateRoomDocument, baseOptions);\n    }\nexport type CreateRoomMutationHookResult = ReturnType<typeof useCreateRoomMutation>;\nexport type CreateRoomMutationResult = ApolloReactCommon.MutationResult<CreateRoomMutation>;\nexport type CreateRoomMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateRoomMutation, CreateRoomMutationVariables>;\nexport const CreateLikeDocument = gql`\n    mutation createLike($userId: Float!, $roomId: Float!) {\n  createLike(userId: $userId, roomId: $roomId)\n}\n    `;\nexport type CreateLikeMutationFn = ApolloReactCommon.MutationFunction<CreateLikeMutation, CreateLikeMutationVariables>;\n\n    export function useCreateLikeMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateLikeMutation, CreateLikeMutationVariables>) {\n      return ApolloReactHooks.useMutation<CreateLikeMutation, CreateLikeMutationVariables>(CreateLikeDocument, baseOptions);\n    }\nexport type CreateLikeMutationHookResult = ReturnType<typeof useCreateLikeMutation>;\nexport type CreateLikeMutationResult = ApolloReactCommon.MutationResult<CreateLikeMutation>;\nexport type CreateLikeMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateLikeMutation, CreateLikeMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n    }\n    refreshToken\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n    export function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n      return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n    }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\nexport type LogoutMutationFn = ApolloReactCommon.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n    export function useLogoutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n      return ApolloReactHooks.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, baseOptions);\n    }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = ApolloReactCommon.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    email\n    name\n  }\n}\n    `;\n\n    export function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n      return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n    }\n      export function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\n      \nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\nexport const RegisterDocument = gql`\n    mutation Register($email: String!, $password: String!, $name: String) {\n  register(email: $email, password: $password, name: $name)\n}\n    `;\nexport type RegisterMutationFn = ApolloReactCommon.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n    export function useRegisterMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n      return ApolloReactHooks.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, baseOptions);\n    }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = ApolloReactCommon.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = ApolloReactCommon.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const RequestAuthEmailDocument = gql`\n    mutation RequestAuthEmail($email: String!, $message: String!) {\n  requestAuthEmail(email: $email, message: $message)\n}\n    `;\nexport type RequestAuthEmailMutationFn = ApolloReactCommon.MutationFunction<RequestAuthEmailMutation, RequestAuthEmailMutationVariables>;\n\n    export function useRequestAuthEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RequestAuthEmailMutation, RequestAuthEmailMutationVariables>) {\n      return ApolloReactHooks.useMutation<RequestAuthEmailMutation, RequestAuthEmailMutationVariables>(RequestAuthEmailDocument, baseOptions);\n    }\nexport type RequestAuthEmailMutationHookResult = ReturnType<typeof useRequestAuthEmailMutation>;\nexport type RequestAuthEmailMutationResult = ApolloReactCommon.MutationResult<RequestAuthEmailMutation>;\nexport type RequestAuthEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<RequestAuthEmailMutation, RequestAuthEmailMutationVariables>;\nexport const NewEmailDocument = gql`\n    subscription newEmail {\n  newEmail\n}\n    `;\n\n    export function useNewEmailSubscription(baseOptions?: ApolloReactHooks.SubscriptionHookOptions<NewEmailSubscription, NewEmailSubscriptionVariables>) {\n      return ApolloReactHooks.useSubscription<NewEmailSubscription, NewEmailSubscriptionVariables>(NewEmailDocument, baseOptions);\n    }\nexport type NewEmailSubscriptionHookResult = ReturnType<typeof useNewEmailSubscription>;\nexport type NewEmailSubscriptionResult = ApolloReactCommon.SubscriptionResult<NewEmailSubscription>;\nexport const UsersDocument = gql`\n    query Users {\n  users {\n    id\n    name\n    avatar\n    email\n    roomConnection {\n      id\n      name\n      description\n      photoConnection {\n        id\n        file\n        caption\n      }\n    }\n  }\n}\n    `;\n\n    export function useUsersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n      return ApolloReactHooks.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n    }\n      export function useUsersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      }\n      \nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersQueryResult = ApolloReactCommon.QueryResult<UsersQuery, UsersQueryVariables>;","import React, { useState, useContext } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, TextInput, TouchableOpacity, Dimensions, Image, ScrollView, FlatList } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { NavigationStackScreenProps } from \"react-navigation-stack\";\nimport { Ionicons } from '@expo/vector-icons';\nimport _ from 'lodash';\nimport Swiper from 'react-native-web-swiper';\nimport { UserContext } from \"../UserContext\";\nimport { useSelectRoomsQuery, useSelectAllRoomsQuery } from \"../../generated/graphql\";\nimport { HomeStackNavProps } from \"../HomeStack\";\nconst { width } = Dimensions.get('window');\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n  },\n\n  wrapper: {\n    borderWidth: 0,\n    borderColor: '#010000',\n    width: '80%',\n    marginLeft: 40,\n    height: 250,\n    marginTop: 30,\n  },\n\n  wrapper2: {\n    borderWidth: 0.5,\n    borderColor: '#010000',\n    width: '80%',\n    marginLeft: 40,\n    height: 250,\n    marginTop: 50\n  },\n\n  slide: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  },\n\n  slide1: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#9DD6EB'\n  },\n\n  slide2: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#97CAE5'\n  },\n\n  slide3: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#92BBD9'\n  },\n\n  text: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n\n  image: {\n    width: '100%',\n    flex: 1\n  }\n});\n\nexport function Detail({ route, navigation }: HomeStackNavProps<\"Detail\">) {\n  // const [list, setList] = useState(data);\n  const [page, setPage] = useState(5);\n  const [state, dispatch] = useContext(UserContext);\n  const { data, loading, error } = useSelectAllRoomsQuery();\n  console.log('loading', loading);\n  return (\n    <ScrollView style={styles.container}>\n      {\n        data?.selectAllRooms?.slice(0, 10).map(item => {\n          return (\n            <View style={styles.wrapper} key={item.id}>\n              <Swiper>\n                <View style={styles.slide}>\n                  <View style={{ position: 'absolute', right: 0, zIndex: 1, top: 0 }}>\n                    <View style={{ position: 'absolute', right: 3, zIndex: 1, top: 3 }}>\n                      <Ionicons name=\"md-heart\" size={22} color=\"red\" />\n                    </View>\n                    <Ionicons name=\"md-heart-empty\" size={30} color=\"white\" />\n                  </View>\n                  <Image resizeMode='stretch' style={styles.image} source={{ uri: item?.photoConnection[0]?.file }} />\n                </View>\n                <View style={styles.slide}>\n                  <View style={{ position: 'absolute', right: 0, zIndex: 1, top: 0 }}>\n                    <View style={{ position: 'absolute', right: 3, zIndex: 1, top: 3 }}>\n                      <Ionicons name=\"md-heart\" size={22} color=\"red\" />\n                    </View>\n                    <Ionicons name=\"md-heart-empty\" size={30} color=\"white\" />\n                  </View>\n                  <Image resizeMode='stretch' style={styles.image} source={{ uri: item?.photoConnection[0]?.file }} />\n                </View>\n                <View style={styles.slide}>\n                  <View style={{ position: 'absolute', right: 0, zIndex: 1, top: 0 }}>\n                    <View style={{ position: 'absolute', right: 3, zIndex: 1, top: 3 }}>\n                      <Ionicons name=\"md-heart\" size={22} color=\"red\" />\n                    </View>\n                    <Ionicons name=\"md-heart-empty\" size={30} color=\"white\" />\n                  </View>\n                  <Image resizeMode='stretch' style={styles.image} source={{ uri: item?.photoConnection[0]?.file }} />\n                </View>\n              </Swiper>\n              <View style={ { marginBottom: 25 } }>\n                <View style={{ flex: 1, flexDirection: 'row', marginTop: 5 }}>\n                  <Button\n                    title=\"슈퍼호스트\"\n                    titleStyle={{ color: 'black' }}\n                    containerStyle={{ borderRadius: 3, width: '30%' }}\n                    buttonStyle={{ borderRadius: 3, backgroundColor: '#FFFFFF', borderColor: 'black', borderWidth: 1, height: 25 }}\n                  />\n                  <View style={ { marginLeft: 5 } }>\n                    <Text style={ { color: 'gray' } }>{ item.name }</Text>\n                  </View>\n                  <View style={ { position: 'absolute', right: 0, flexDirection: 'row' } }>\n                    <Ionicons name=\"md-star\" size={15} color=\"red\" />\n                    <Text>4.8 (215)</Text>\n                  </View>\n                </View>\n              </View>\n              <View>\n                <Text>{ item.description }</Text>\n              </View>\n            </View>\n          )\n        })\n      }\n    </ScrollView>\n  );\n};","import React, { useState, useContext, useEffect } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, TextInput, TouchableOpacity, Dimensions, Image, ScrollView, FlatList, Modal, ActivityIndicator } from 'react-native';\nimport { NavigationStackScreenProps } from \"react-navigation-stack\";\nimport MapView, { Marker } from 'react-native-maps';\nimport _ from 'lodash';\nimport * as Device from 'expo-device';\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\nimport Swiper from \"react-native-web-swiper\";\nimport { Avatar, Divider } from \"react-native-elements\";\nimport { useSelectRoomQuery } from \"../../generated/graphql\";\nimport moment from \"moment\";\nimport { HomeStackNavProps } from \"../HomeStack\";\nimport { AuthContext } from \"../AuthProvider\";\nconst { height: FULL_HEIGHT, width: FULL_WIDTH } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container1: {\n    height: FULL_HEIGHT,\n    paddingTop: Device.osName === 'Android' ? 20 : 0,\n    position: 'relative'\n  },\n  container2: {\n    height: FULL_HEIGHT / 12,\n    flexDirection: 'row',\n    paddingLeft: 15,\n    alignItems: 'center',\n    position: 'relative',\n    zIndex: 1,\n  },\n  container3: {\n    position: 'absolute',\n    right: 10\n  },\n  container4: {\n    height: FULL_HEIGHT / 3,\n    position: 'relative'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0\n  },\n  modalContainer: {\n    borderTopWidth: 0.1,\n    borderTopColor: 'gray',\n    height: FULL_HEIGHT / 10,\n    width: FULL_WIDTH,\n    position: 'absolute',\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  modalContainer2: {\n    borderRadius: 5,\n    backgroundColor: '#FA6D6D',\n    width: '40%',\n    height: '80%',\n    position: 'absolute',\n    right: 3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container5: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  container6: {\n    width: '85%',\n    height: 40,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  container7: {\n    width: '90%',\n    height: 70,\n    position: 'relative',\n    justifyContent: 'center'\n  },\n  avatarContainer: {\n    position: 'absolute',\n    right: 2,\n    borderRadius: 40,\n    height: '75%',\n    width: '15%',\n  },\n  container8: {\n    height: 200,\n    width: '90%',\n    marginLeft: '10%',\n    marginRight: '5%'\n  },\n  container9: {\n    marginTop: 10,\n    width: '100%',\n    height: 25,\n    justifyContent: 'center',\n    paddingLeft: 10\n  },\n  container10: {\n    width: '100%',\n    height: 100,\n    marginTop: 30,\n    paddingLeft: 10,\n  },\n  container11: {\n    width: '90%',\n    height: 150,\n    marginTop: 30\n  },\n  container12: {\n    width: '100%',\n    height: '30%',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  avatarContainer2: {\n\n  },\n  container13: {\n    width: '50%',\n    height: '100%',\n    flexDirection: 'column',\n    marginLeft: 10\n  },\n  container14: {\n    width: '95%',\n    height: '60%'\n  },\n  container15: {\n    width: '100%',\n    height: '20%',\n    marginTop: 8\n  },\n  container16: {\n    width: '100%',\n    height: 200,\n    marginTop: 30,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  container17: {\n    borderRadius: 15,\n    backgroundColor: '#0F7652',\n    width: 30,\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nexport function RoomDetail({ route, navigation }: HomeStackNavProps<\"RoomDetail\">) {\n  const [state, dispatch] = useContext(AuthContext);\n  const { data, loading } = useSelectRoomQuery({\n    variables: {\n      id: parseInt(route?.params?.id)\n    }\n  });\n  useEffect(() => {\n    dispatch({ type: 'setRoomId', value: route?.params?.id });\n  }, []);\n  if (loading) {\n    return (\n      <View>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n  return (\n    <View>\n      <ScrollView style={styles.container1}>\n        <View style={styles.container4}>\n          <View style={styles.container2}>\n            <View>\n              <Ionicons name=\"ios-arrow-round-back\" size={25} />\n            </View>\n            <View style={styles.container3}>\n              <Ionicons name=\"md-heart-empty\" size={25} />\n            </View>\n          </View>\n          <View style={styles.image}>\n            <Swiper\n              loop\n              controlsProps={{ prevTitle: '', nextTitle: '' }}\n            >\n              {\n                data?.selectRoom?.photoConnection?.map(photo => (\n                  <Image\n                    key={photo.id}\n                    source={{ uri: photo.file }}\n                    style={{ width: '100%', height: '100%' }}\n                  />\n                ))\n              }\n            </Swiper>\n          </View>\n        </View>\n        <View style={styles.container5}>\n          <View style={styles.container6}>\n            <Text style={{ fontWeight: 'bold', fontSize: 30 }}>{data?.selectRoom?.name}</Text>\n          </View>\n          <View style={styles.container7}>\n            <Text style={{ color: 'gray', fontSize: 15 }}>{data?.selectRoom?.description}</Text>\n            <Avatar\n              rounded\n              source={{\n                uri:\n                  data?.selectRoom?.user?.avatar,\n              }}\n              containerStyle={styles.avatarContainer}\n            />\n          </View>\n          <View style={styles.container8}>\n            <Text>{data?.selectRoom?.description}</Text>\n          </View>\n          <Divider style={{ borderColor: 'gray', width: '90%', borderWidth: 0.6 }} />\n          <View style={styles.container9}>\n            <Text style={{ color: '#0F7652', fontWeight: 'bold' }}>번역</Text>\n          </View>\n          <View style={styles.container10}>\n            <Text>번역 번역 번역 번역 번역 번역</Text>\n          </View>\n          <Divider style={{ borderColor: 'gray', width: '90%', borderWidth: 0.6 }} />\n          <View style={styles.container9}>\n            <Text style={{ color: '#0F7652', fontWeight: 'bold' }}>숙소위치</Text>\n          </View>\n          {\n            Device.osName === 'Android' && (\n              <View style={styles.container16}>\n                <MapView\n                  style={{ width: '100%', height: '100%' }}\n                  region={{\n                    latitude: 37.78825,\n                    longitude: -122.4324,\n                    latitudeDelta: 0.0022,\n                    longitudeDelta: 0.0421,\n                  }}\n                >\n                  <Marker\n                    coordinate={{\n                      latitude: 37.78825,\n                      longitude: -122.4324,\n                    }}\n                  >\n                    <View style={ styles.container17 }>\n                      <Feather name=\"home\" size={20} color=\"white\" />\n                    </View>\n                  </Marker>\n                </MapView>\n              </View>\n            )\n          }\n          <Divider style={{ borderColor: 'gray', width: '90%', borderWidth: 0.6 }} />\n          <View style={styles.container11}>\n            <View style={styles.container12}>\n              <Avatar\n                rounded\n                source={{\n                  uri:\n                    data?.selectRoom?.reviews[0]?.user?.avatar,\n                }}\n                containerStyle={styles.avatarContainer2}\n              />\n              <View style={styles.container13}>\n                <Text style={{ fontWeight: 'bold' }}>{data?.selectRoom?.reviews[0]?.user?.name}</Text>\n                <Text style={{ color: 'gray' }}>{moment(_.replace(data?.selectRoom?.reviews[0]?.createdAt, /\"/g, '')).format('YYYY년 MM월')}</Text>\n              </View>\n            </View>\n            <View style={styles.container14}>\n              <Text>{data?.selectRoom?.reviews[0]?.review}</Text>\n            </View>\n            <TouchableOpacity style={styles.container15} onPress={() => navigation.navigate(\"Reviews\", { id: data?.selectRoom?.id } as any)}>\n              <Text style={{ color: '#0F7652', fontWeight: 'bold' }}>후기 {data?.selectRoom?.reviews.length}개 모두 읽기</Text>\n            </TouchableOpacity>\n            <Divider style={{ borderColor: 'gray', width: '100%', borderWidth: 0.6, marginTop: 30 }} />\n          </View>\n          <View style={{ height: 180 }} />\n        </View>\n      </ScrollView>\n      <View style={styles.modalContainer}>\n        <TouchableOpacity style={styles.modalContainer2}>\n          <Text style={{ color: 'white', fontWeight: 'bold' }}>날짜 입력</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};","import React, { useRef, useEffect, useCallback, useState, useContext, useMemo } from 'react'\nimport { View, Dimensions, StyleSheet, TouchableOpacity, Text, Platform, FlatList, TouchableHighlight, Image, Alert } from 'react-native';\nimport { SearchBar, Avatar, Divider } from 'react-native-elements';\nimport { Ionicons, Entypo, AntDesign } from '@expo/vector-icons';\nimport _ from 'lodash';\nimport moment from 'moment';\n\ninterface Props {\n    review: any\n}\n\nconst styles = StyleSheet.create({\n    container11: {\n        width: '100%',\n        height: 150,\n        marginTop: 30\n    },\n    container12: {\n        width: '100%',\n        height: '30%',\n        alignItems: 'center',\n        flexDirection: 'row',\n        paddingTop: 5\n    },\n    avatarContainer2: {\n    },\n    container13: {\n        width: '50%',\n        height: '100%',\n        flexDirection: 'column',\n        marginLeft: 10\n    },\n    container14: {\n        width: '95%',\n        height: '60%'\n    },\n    container15: {\n        width: '100%',\n        height: '20%',\n        marginTop: 8\n    }\n});\n\nexport const Review: React.FC<Props> = ({\n    review\n}) => {\n    return (\n        <View style={styles.container11}>\n            <Divider style={{ borderColor: 'gray', width: '100%', borderWidth: 0.3, marginTop: 30 }} />\n            <View style={styles.container12}>\n                <Avatar\n                    rounded\n                    source={{\n                        uri:\n                        review?.user?.avatar,\n                    }}\n                    containerStyle={styles.avatarContainer2}\n                />\n                <View style={styles.container13}>\n                    <Text style={{ fontWeight: 'bold' }}>{ review?.user?.name }</Text>\n                    <Text style={{ color: 'gray' }}>{ moment(_.replace(review?.createdAt, /\"/g, '')).format('YYYY년 MM월') }</Text>\n                </View>\n            </View>\n            <View style={styles.container14}>\n                <Text>{ review?.review }</Text>\n            </View>\n        </View>\n    );\n}","import React, { useState, useContext } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, TextInput, TouchableOpacity, Dimensions, Image, ScrollView, FlatList, Modal, ActivityIndicator } from 'react-native';\nimport { NavigationStackScreenProps } from \"react-navigation-stack\";\nimport _ from 'lodash';\nimport * as Device from 'expo-device';\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport Swiper from \"react-native-web-swiper\";\nimport { Avatar, Divider } from \"react-native-elements\";\nimport { useSelectRoomQuery } from \"../../generated/graphql\";\nimport moment from \"moment\";\nimport { HomeStackNavProps } from \"../HomeStack\";\nimport { Review } from \"../components/Review\";\nconst { height: FULL_HEIGHT, width: FULL_WIDTH } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container1: {\n    paddingTop: FULL_HEIGHT * 0.02,\n    paddingLeft: FULL_WIDTH * 0.05,\n    paddingRight: FULL_WIDTH * 0.05,\n  },\n  container2: {\n    width: '100%',\n    height: FULL_HEIGHT * 0.1,\n    justifyContent: 'center'\n  },\n  container3: {\n    width: '30%',\n    height: FULL_HEIGHT * 0.05,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  container4: {\n    width: '100%',\n    height: FULL_HEIGHT * 0.2,\n    marginTop: FULL_HEIGHT * 0.01\n  },\n  container5: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  container6: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '50%'\n  }\n});\n\nexport function Reviews({ route, navigation }: HomeStackNavProps<\"Reviews\">) {\n  const [page, setPage] = useState(5);\n  const { data, loading } = useSelectRoomQuery({\n    variables: {\n      id: parseInt(route?.params?.id)\n    }\n  });\n  if (loading) {\n    return (\n      <View>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n\n  const isCloseToBottom = ({layoutMeasurement, contentOffset, contentSize}) => {\n    const paddingToBottom = 20;\n    return layoutMeasurement.height + contentOffset.y >=\n      contentSize.height - paddingToBottom;\n  };\n  return (\n    <ScrollView\n      style={styles.container1}\n      onScroll={({nativeEvent}) => {\n        if (isCloseToBottom(nativeEvent)) {\n          if ( page < data?.selectRoom?.reviews.length ) {\n            const newPage = _.clone(page) + 5;\n            setPage(newPage);\n          }\n        }\n      }}\n      scrollEventThrottle={100}\n    >\n      <View style={styles.container2}>\n        <Text style={{ fontWeight: 'bold', fontSize: 30 }}>후기</Text>\n      </View>\n      <View style={styles.container3}>\n        <AntDesign name=\"star\" size={18} color=\"#0F7652\" />\n        <Text style={{ fontWeight: 'bold' }}>4.95</Text>\n        <Text style={{ color: 'gray' }}>|</Text>\n        <Text style={{ fontWeight: 'bold' }}>822개</Text>\n      </View>\n      <View style={{ borderBottomColor: 'gray', borderBottomWidth: 1, width: '100%', marginTop: FULL_HEIGHT * 0.01 }} />\n      <View style={styles.container4}>\n        <View style={styles.container5}>\n          <Text>정확성</Text>\n          <View style={styles.container6}>\n            <View style={{ width: '50%', borderWidth: 2, borderColor: '#0F7652', backgroundColor: '#0F7652', marginRight: 10, borderRadius: 20 }}></View>\n            <Text style={{ fontWeight: 'bold' }}>5.0</Text>\n          </View>\n        </View>\n        <View style={styles.container5}>\n          <Text>의사소통</Text>\n          <View style={styles.container6}>\n            <View style={{ width: '50%', borderWidth: 2, borderColor: '#0F7652', backgroundColor: '#0F7652', marginRight: 10, borderRadius: 20 }}></View>\n            <Text style={{ fontWeight: 'bold' }}>5.0</Text>\n          </View>\n        </View>\n        <View style={styles.container5}>\n          <Text>체크인</Text>\n          <View style={styles.container6}>\n            <View style={{ width: '50%', borderWidth: 2, borderColor: '#0F7652', backgroundColor: '#0F7652', marginRight: 10, borderRadius: 20 }}></View>\n            <Text style={{ fontWeight: 'bold' }}>4.9</Text>\n          </View>\n        </View>\n        <View style={styles.container5}>\n          <Text>청결도</Text>\n          <View style={styles.container6}>\n            <View style={{ width: '50%', borderWidth: 2, borderColor: '#0F7652', backgroundColor: '#0F7652', marginRight: 10, borderRadius: 20 }}></View>\n            <Text style={{ fontWeight: 'bold' }}>4.9</Text>\n          </View>\n        </View>\n        <View style={styles.container5}>\n          <Text>위치</Text>\n          <View style={styles.container6}>\n            <View style={{ width: '50%', borderWidth: 2, borderColor: '#0F7652', backgroundColor: '#0F7652', marginRight: 10, borderRadius: 20 }}></View>\n            <Text style={{ fontWeight: 'bold' }}>4.8</Text>\n          </View>\n        </View>\n      </View>\n      {\n        data?.selectRoom?.reviews.slice(0, page).map(review => <Review key={review.id} review={review}/>)\n      }\n    </ScrollView>\n  );\n};","import React, { useRef, useEffect, useCallback, useState, useContext, useMemo } from 'react'\nimport { View, Dimensions, StyleSheet, TouchableOpacity, Text, Platform, FlatList, TouchableHighlight, Image, Alert } from 'react-native';\nimport _ from 'lodash';\nimport { Ionicons, Entypo, AntDesign } from '@expo/vector-icons';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { HomeParamList } from '../HomeStack';\nimport { RouteProp } from '@react-navigation/native';\n\ninterface Props {\n    navigation: StackNavigationProp<HomeParamList>;\n    route: any\n}\n\nconst styles = StyleSheet.create({\n    \n});\n\nexport const HeaderRight: React.FC<Props> = ({\n    navigation,\n    route\n}) => {\n    \n    return (\n        <TouchableOpacity style={ { marginRight: 10 } } onPress={ () => navigation.navigate(\"FindReviews\") }>\n            <AntDesign name=\"search1\" size={20}/>\n        </TouchableOpacity>\n    );\n}\nexport const HeaderLeft: React.FC<Props> = ({\n    navigation,\n    route\n}) => {\n    const onPress = () => {\n        try {\n            navigation.goBack();\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n    return (\n        <TouchableOpacity style={ { marginLeft: 10 } } onPress={ onPress }>\n            <AntDesign name=\"arrowleft\" size={20}/>\n        </TouchableOpacity>\n    );\n}","import React, { useState, useContext, useCallback, useMemo } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, TextInput, TouchableOpacity, Dimensions, Image, ScrollView, FlatList, Modal, ActivityIndicator } from 'react-native';\nimport { NavigationStackScreenProps } from \"react-navigation-stack\";\nimport _ from 'lodash';\nimport * as Device from 'expo-device';\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport Swiper from \"react-native-web-swiper\";\nimport { Avatar, Divider } from \"react-native-elements\";\nimport { useSelectRoomQuery } from \"../../generated/graphql\";\nimport moment from \"moment\";\nimport { HomeStackNavProps } from \"../HomeStack\";\nimport { Review } from \"../components/Review\";\nimport { AuthContext } from \"../AuthProvider\";\nconst { height: FULL_HEIGHT, width: FULL_WIDTH } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container1: {\n    width: '100%',\n    height: FULL_HEIGHT * 0.1,\n  },\n  container2: {\n    width: '100%',\n    height: '100%',\n    fontSize: 35,\n    color: '#18A776',\n  }\n});\n\nexport function FindReviews({ route, navigation }: HomeStackNavProps<\"FindReviews\">) {\n  \n  const [ state, dispatch ] = useContext(AuthContext);\n  const [ searchword, setSearchword ] = useState('');\n  const [ changedword, setChangedword ] = useState('');\n  const { data, loading } = useSelectRoomQuery({\n    variables: {\n      id: parseInt(state?.roomId)\n    }\n  });\n  if (loading) {\n    return (\n      <View>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n  const onChangeText = useCallback((value) => {\n    setChangedword(value);\n  }, [changedword]);\n  const onEndEditing = useCallback(() => {\n    const newChangedword = _.clone(changedword);\n    setSearchword(newChangedword);\n  }, [changedword]);\n  const reviews = useMemo(() => {\n    let reviews = [];\n    if ( searchword !== '' ) {\n      reviews = _.filter( data?.selectRoom?.reviews, (o) => {\n        return _.includes(o.review, searchword);\n      });\n    }\n    return reviews;\n  }, [data, searchword]);\n  return (\n    <ScrollView>\n      <View style={ styles.container1 }>\n        <TextInput\n          style={ styles.container2 }\n          placeholder=\"후기검색\"\n          onChangeText={onChangeText}\n          onEndEditing={onEndEditing}\n          onBlur={onEndEditing}\n        >\n        </TextInput>\n      </View>\n      <View style={ { marginTop: 20 } }>\n        {\n          reviews.map(review => <Review key={review.id} review={review}/>)\n        }\n      </View>\n    </ScrollView>\n  );\n};","import React, { useState, useRef, useEffect } from \"react\";\nimport { TouchableOpacity, Text, Button, View } from \"react-native\";\nimport { HomeStackNavProps, HomeParamList } from \"./HomeStack\";\nimport { StackNavigationState, TypedNavigator } from \"@react-navigation/native\";\nimport { Detail } from \"./screens/Detail\";\nimport { RoomDetail } from \"./screens/RoomDetail\";\nimport { Reviews } from \"./screens/Reviews\";\nimport { HeaderRight, HeaderLeft } from \"./components/Headers\";\nimport { FindReviews } from \"./screens/FindReviews\";\n\nexport const addHomeRoutes = (\n  Stack: TypedNavigator<\n    HomeParamList,\n    StackNavigationState,\n    any,\n    any,\n    any\n  >,\n  navigation: any,\n  route: any\n) => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"Detail\"\n        component={Detail}\n      />\n      <Stack.Screen\n        name=\"RoomDetail\"\n        component={RoomDetail}\n        options={{\n          headers: () => null,\n        }}\n      />\n      <Stack.Screen\n        name=\"Reviews\"\n        component={Reviews}\n        options={{\n          headerTitle: \"\",\n          headerRight: () => HeaderRight({navigation, route}),\n          headerLeft: () => HeaderLeft({navigation, route})\n        }}\n      />\n      <Stack.Screen\n        name=\"FindReviews\"\n        component={FindReviews}\n        options={{\n          headerTitle: \"\"\n        }}\n      />\n    </>\n  );\n};\n","import { Dimensions } from \"react-native\";\n\nconst uuidv1 = require('uuid/v1');\n\nexport const { width : FULL_WIDTH, height : FULL_HEIGHT } = Dimensions.get('window');\n\nexport const API = \"https://conduit.productionready.io/api\";\nexport const SECURESTORAGE_JWT = \"@conduit/ASYNCSTORAGE_JWT\";\n\nexport const data = [\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/GImvG4q.jpg',\n      title: 'Lorem ipsum dolor sit amet',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/Pz2WYAc.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/IGRuEAa.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/fRGHItn.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/WmenvXr.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/GImvG4q.jpg',\n      title: 'Lorem ipsum dolor sit amet',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/Pz2WYAc.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/IGRuEAa.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/fRGHItn.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/WmenvXr.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/GImvG4q.jpg',\n      title: 'Lorem ipsum dolor sit amet',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/Pz2WYAc.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/IGRuEAa.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/fRGHItn.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/WmenvXr.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/GImvG4q.jpg',\n      title: 'Lorem ipsum dolor sit amet',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/Pz2WYAc.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/IGRuEAa.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/fRGHItn.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/WmenvXr.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor '\n    },\n  ];\n  \n  export const tempData = [\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/GImvG4q.jpg',\n      title: 'Lorem ipsum dolor sit amet',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/Pz2WYAc.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum '\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/IGRuEAa.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/fRGHItn.jpg',\n      title: 'Lorem ipsum dolor',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet'\n    },\n    {\n      id: uuidv1(),\n      uri: 'https://i.imgur.com/WmenvXr.jpg',\n      title: 'Lorem ipsum ',\n      content: 'Neque porro quisquam est qui dolorem ipsum quia dolor '\n    },\n  ];","import React, { useRef, useEffect, useCallback, useState, useContext, useMemo } from 'react'\nimport { View, Dimensions, StyleSheet, TouchableOpacity, Text, Platform, FlatList, TouchableHighlight, Image, Alert } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { Ionicons, Entypo, AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport Swiper from 'react-native-web-swiper';\nimport { UserContext } from '../UserContext';\nimport { FULL_WIDTH, FULL_HEIGHT } from '../constants';\nimport { Room, useCreateLikeMutation, SelectRoomsDocument, useSelectRoomsQuery } from '../../generated/graphql';\nimport { AuthContext } from '../AuthProvider';\n\ninterface Props {\n    room: Room,\n    navigation: any\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: FULL_WIDTH * 0.85,\n        height: FULL_HEIGHT / 3,\n        marginBottom: 15\n    },\n    container2: {\n        height: '80%',\n    },\n    image: {\n        width: '100%',\n        flex: 1\n    },\n    DotComponent: {\n        backgroundColor: 'gray',\n        borderRadius: 30,\n        width: 5,\n        height: 5,\n        marginLeft: 5\n    },\n    ActiveDotComponent: {\n        backgroundColor: 'white',\n        borderRadius: 30,\n        width: 7,\n        height: 7,\n        marginLeft: 5\n    },\n    LikeContainer: {\n        borderRadius: 30,\n        backgroundColor: 'white',\n        width: 25,\n        height: 25,\n        position: 'absolute',\n        right: 5,\n        top: 5,\n        zIndex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    container3: {\n        borderWidth: 1,\n        borderColor: 'black',\n        width: '20%',\n        height: 18,\n        borderRadius: 3,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    container4: {\n        paddingTop: 5\n    },\n    container5: {\n        flexDirection: 'row',\n        marginTop: 3,\n    },\n    container6: {\n        width: '30%',\n        height: 18,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: 5\n    },\n    container7: {\n        width: '25%',\n        height: 18,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        position: 'absolute',\n        right: 0,\n        flex: 1,\n        flexDirection: 'row'\n    },\n});\n\nexport const RoomCard: React.FC<Props> = ({\n    room,\n    navigation\n}) => {\n    const [state, dispatch] = useContext(AuthContext);\n    const [createLike] = useCreateLikeMutation({\n        // refetchQueries: SelectRoomsDocument\n    });\n    const { data } = useSelectRoomsQuery({\n        variables: {\n            skip: 0,\n            take: 12\n        }\n    });\n    const client = useApolloClient();\n    const meData = client.readFragment({\n        id: '1',\n        fragment: gql`\n        fragment me on Todo {\n          id\n          text\n          me\n        }\n      `,\n    });\n    const initialIsLike = useMemo(() => {\n        let isLike = false;\n        const likeUsers = _.map(room?.likeUsers, likeUser => likeUser.user);\n        if (_.some(likeUsers, { id: meData?.me?.id }) || _.some(likeUsers, { id: `${meData?.me?.id}` })) {\n            isLike = true;\n        }\n        return isLike;\n    }, [room]);\n    const [like, setLike] = useState<boolean>(false);\n    const DotComponent = useMemo(() => {\n        return (\n            <View style={styles.DotComponent} />\n        );\n    }, []);\n    const ActiveDotComponent = useMemo(() => {\n        return (\n            <View style={styles.ActiveDotComponent} />\n        );\n    }, []);\n    const onPressLike = useCallback(async () => {\n        setLike(!like);\n        createLike({\n            variables: {\n                roomId: parseInt(room?.id),\n                userId: parseInt(meData?.me?.id)\n            },\n            update(cache) {\n                // const newRoom = _.clone(room);\n                // const likeUsers : any = newRoom?.likeUsers;\n                // if ( initialIsLike ) {\n                //     _.remove(likeUsers as any, (likeUser : any) => {\n                //         return likeUser?.user?.id == meData?.me?.id;\n                //     });\n                // } else {\n                //     likeUsers.push({\n                //         user: meData?.me,\n                //         __typename: 'Room'\n                //     });\n                // }\n                // newRoom.likeUsers = likeUsers;\n                // let newSelectRooms = data?.selectRooms;\n                // const index = _.findIndex(newSelectRooms, (item : any) => item.id === room.id);\n                // newSelectRooms[index] = newRoom;\n                // cache.writeQuery({\n                //     query: SelectRoomsDocument,\n                //     data: {\n                //         selectRooms: [],\n                //         __typename: 'Query'\n                //     },\n                //     variables: {\n                //         skip: 0,\n                //         take: 12\n                //     }\n                // });\n            },\n            refetchQueries: [{\n                query: SelectRoomsDocument,\n                variables: {\n                    skip: 0,\n                    take: 12\n                }\n            }]\n        });\n    }, [room, like]);\n    const onPressDetail = useCallback((id) => {\n        navigation.navigate('RoomDetail', { id });\n    }, []);\n    useEffect(() => {\n        setLike(initialIsLike);\n    }, [initialIsLike]);\n    return (\n        <TouchableOpacity style={styles.container} onPress={ () => onPressDetail(room.id) }>\n            <TouchableOpacity style={styles.LikeContainer} onPress={onPressLike}>\n                {\n                    like ? (\n                        <Ionicons name=\"md-heart\" size={20} color=\"red\" />\n                    ) : (\n                            <Ionicons name=\"md-heart-empty\" size={20} color=\"black\" />\n                        )\n                }\n            </TouchableOpacity>\n            <View style={styles.container2}>\n                <Swiper\n                    controlsProps={{\n                        prevTitle: '',\n                        nextTitle: '',\n                        DotComponent: ({ index, isActive, onPress }) => isActive ? ActiveDotComponent : DotComponent\n                    } as any}\n                >\n                    {\n                        room?.photoConnection.map((item, index) => <Image key={index} resizeMode='stretch' style={styles.image} source={{ uri: room?.photoConnection[index]?.file }} />)\n                    }\n                </Swiper>\n            </View>\n            <View style={styles.container4}>\n                <View style={styles.container5}>\n                    <View style={styles.container3}>\n                        <Text style={{ fontSize: 10, fontWeight: 'bold' }}>슈퍼 호스트</Text>\n                    </View>\n                    <View style={styles.container6}>\n                        <Text style={{ fontSize: 14, color: 'gray', fontWeight: 'bold' }}>{room?.name}</Text>\n                    </View>\n                    <View style={styles.container7}>\n                        <Ionicons name=\"md-star\" size={10} color=\"red\" />\n                        <Text style={{ fontSize: 10 }}>{`${room?.score}`}</Text>\n                        <Text style={{ fontSize: 10, color: 'gray' }}>{`(${Math.floor(room?.price / 10000)})`}</Text>\n                    </View>\n                </View>\n                <View style={styles.container5}>\n                    <Text style={{ fontSize: 15 }}>{room?.description}</Text>\n                </View>\n            </View>\n        </TouchableOpacity>\n    );\n}","import React, { useState, useContext, useEffect, useMemo, useCallback } from \"react\";\nimport { StyleSheet, Text, View, ImageBackground, TextInput, TouchableOpacity, Dimensions, Image, ScrollView, FlatList, Button, ActivityIndicator } from 'react-native';\nimport { NavigationStackScreenProps } from \"react-navigation-stack\";\nimport _ from 'lodash';\nimport * as Device from 'expo-device';\nimport { Ionicons, Entypo, AntDesign } from '@expo/vector-icons';\nimport { useSelectRoomsQuery, Room } from \"../../generated/graphql\";\nimport { RoomCard } from \"../components/RoomCard\";\nimport { UserContext } from \"../UserContext\";\nimport { HomeStackNavProps } from \"../HomeStack\";\nimport { AuthContext } from \"../AuthProvider\";\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    paddingTop: 20\n  }\n});\n\nexport function Home({ navigation }: HomeStackNavProps<\"Home\">) {\n  const { data, loading, fetchMore, networkStatus, refetch } = useSelectRoomsQuery({\n    variables: { skip: 0, take: 12 },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n    const paddingToBottom = 20;\n    return layoutMeasurement.height + contentOffset.y >=\n      contentSize.height - paddingToBottom;\n  };\n\n  useEffect(() => {\n    if (Device.osName !== 'Android') {\n      window.addEventListener('scroll', onScroll);\n      return () => {\n        window.removeEventListener('scroll', onScroll);\n      };\n    }\n  }, [data?.selectRooms]);\n\n  // if ( loading ) {\n  //   return (\n  //     <View>\n  //       <Text>로딩중...</Text>\n  //     </View>\n  //   );\n  // }\n  const onScroll = useCallback(() => {\n    // if (Device.osName !== 'Android' && (window.scrollY + document.documentElement?.clientHeight > document.documentElement?.scrollHeight - 1)) {\n    fetchMore({\n      variables: {\n        skip: 0,\n        take: data?.selectRooms.length + 4\n      },\n      updateQuery: (pv, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          return pv;\n        }\n        return {\n          __typename: \"Room\",\n          selectRooms: [\n            ...fetchMoreResult.selectRooms\n          ]\n        }\n      }\n    });\n  }, [data?.selectRooms]);\n\n  return (\n    <ScrollView\n      onScroll={({ nativeEvent }) => {\n        if (isCloseToBottom(nativeEvent)) {\n          onScroll();\n        }\n      }}\n      scrollEventThrottle={100}\n    >\n      <View style={styles.container}>\n        {\n          data?.selectRooms?.map(room => <RoomCard key={room.id} room={room as any} navigation={navigation} />)\n        }\n        {\n          loading && (\n            <View>\n              <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n            </View>\n          )\n        }\n      </View>\n    </ScrollView>\n  )\n};","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { createStackNavigator, StackNavigationProp, CardStyleInterpolators } from \"@react-navigation/stack\";\nimport { Text, TouchableOpacity, FlatList, Button } from \"react-native\";\nimport { AuthContext } from \"./AuthProvider\";\nimport { addHomeRoutes } from \"./addHomeRoutes\";\nimport { RouteProp } from \"@react-navigation/native\";\nimport { Home } from \"./screens/Home\";\n\ninterface HomeStackProps {\n  navigation: StackNavigationProp<HomeParamList>;\n  route: any;\n}\n\nexport type HomeParamList = {\n  Home: undefined,\n  Detail: undefined,\n  RoomDetail: undefined,\n  Reviews: undefined,\n  FindReviews: undefined,\n  routes: any\n  \n};\n\nexport type HomeStackNavProps<T extends keyof HomeParamList> = {\n  navigation: StackNavigationProp<HomeParamList, T>;\n  route: RouteProp<HomeParamList, T> | any;\n};\n\nconst Stack = createStackNavigator<HomeParamList>();\n\nexport const HomeStack: React.FC<HomeStackProps> = ({navigation, route}) => {\n  if ( route.state && route.state.index > 0 ) {\n    navigation.setOptions({tabBarVisible: false} as any);\n  }\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        cardStyleInterpolator: CardStyleInterpolators.forRevealFromBottomAndroid\n      }}\n      initialRouteName=\"Home\"\n    >\n      {addHomeRoutes(Stack, navigation, route)}\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          // header: () => null\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n","import React, { useState } from \"react\";\nimport { createStackNavigator, StackNavigationProp } from \"@react-navigation/stack\";\nimport { Button, FlatList, View, Text } from \"react-native\";\nimport { RouteProp } from \"@react-navigation/native\";\n\ninterface SearchStackProps {}\n\nexport type SearchParamList = {\n  Search: undefined;\n};\n\nexport type SearchStackNavProps<T extends keyof SearchParamList> = {\n  navigation: StackNavigationProp<SearchParamList, T>;\n  route: RouteProp<SearchParamList, T>;\n};\n\n\nconst Stack = createStackNavigator<SearchParamList>();\n\nfunction Search({ navigation }) {\n  const [show, setShow] = useState(false);\n  return (\n    <View>\n      <Text>Search</Text>\n    </View>\n  );\n}\n\nexport const SearchStack: React.FC<SearchStackProps> = ({}) => {\n  return (\n    <Stack.Navigator initialRouteName=\"Search\">\n      <Stack.Screen name=\"Search\" component={Search} />\n    </Stack.Navigator>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { AntDesign, Ionicons, EvilIcons } from \"@expo/vector-icons\";\nimport { HomeStack } from \"./HomeStack\";\nimport { SearchStack } from \"./SearchStack\";\n\ninterface AppTabsProps {}\n\ntype AppParamList = {\n  Home: undefined;\n  Search: undefined;\n};\n\n\nconst Tabs = createBottomTabNavigator<AppParamList>();\n\nexport const AppTabs: React.FC<AppTabsProps> = ({}) => {\n  return (\n    <Tabs.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = \"home\";\n            return <AntDesign name={\"home\"} size={size} color={color} />;\n          } else if (route.name === \"Search\") {\n            return <EvilIcons name={\"search\"} size={size} color={color} />;\n          }\n\n          // You can return any component that you like here!\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: \"tomato\",\n        inactiveTintColor: \"gray\"\n      }}\n    >\n      <Tabs.Screen name=\"Home\" component={HomeStack} />\n      <Tabs.Screen name=\"Search\" component={SearchStack} />\n    </Tabs.Navigator>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AuthParamList, AuthNavProps } from \"./AuthParamList\";\nimport { AuthContext } from \"./AuthProvider\";\nimport { Center } from \"./screens/Center\";\nimport { Button, Text } from \"react-native\";\n\ninterface AuthStackProps {}\n\nconst Stack = createStackNavigator<AuthParamList>();\n\nfunction Login({ navigation }: AuthNavProps<\"Login\">) {\n  return (\n    <Center>\n      <Text>I am a login screen</Text>\n      <Button\n        title=\"log me in\"\n        onPress={() => {\n          \n        }}\n      />\n      <Button\n        title=\"go to register\"\n        onPress={() => {\n          navigation.navigate(\"Register\");\n        }}\n      />\n    </Center>\n  );\n}\n\nfunction Register({ navigation, route }: AuthNavProps<\"Register\">) {\n  return (\n    <Center>\n      <Text>route name: {route.name}</Text>\n      <Button\n        title=\"go to login\"\n        onPress={() => {\n          navigation.navigate(\"Login\");\n          // navigation.goBack()\n        }}\n      />\n    </Center>\n  );\n}\n\nexport const AuthStack: React.FC<AuthStackProps> = ({}) => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        header: () => null\n      }}\n      initialRouteName=\"Login\"\n    >\n      <Stack.Screen\n        options={{\n          headerTitle: \"Sign In\"\n        }}\n        name=\"Login\"\n        component={Login}\n      />\n      <Stack.Screen\n        options={{\n          headerTitle: \"Sign Up\"\n        }}\n        name=\"Register\"\n        component={Register}\n      />\n    </Stack.Navigator>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n    createStackNavigator,\n    StackNavigationProp\n} from \"@react-navigation/stack\";\nimport { NavigationContainer, RouteProp } from \"@react-navigation/native\";\nimport { ActivityIndicator, AsyncStorage } from \"react-native\";\nimport * as Device from 'expo-device';\nimport gql from 'graphql-tag';\nimport { Center } from \"./screens/Center\";\nimport { AuthContext } from \"./AuthProvider\";\nimport { AppTabs } from \"./AppTabs\";\nimport { AuthStack } from \"./AuthStack\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\n\ninterface RoutesProps { }\n\nexport const Routes: React.FC<RoutesProps> = ({ }) => {\n    const client = useApolloClient();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (Device.osName !== 'Android') {\n            client.writeFragment({\n                id: '1',\n                fragment: gql`\n                    fragment me on Me {\n                      me\n                    }\n                  `,\n                data: {\n                    me: {\n                        id: 1,\n                        name: 'Groopster',\n                        email: 'Groopster@hanmail.net'\n                    },\n                    __typename: 'me'\n                },\n            });\n        }\n    }, []);\n\n    if (loading) {\n        return (\n            <Center>\n                <ActivityIndicator size=\"large\" />\n            </Center>\n        );\n    }\n\n    return (\n        <NavigationContainer>\n            {true ? <AppTabs /> : <AuthStack />}\n        </NavigationContainer>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport { setContext } from \"apollo-link-context\";\nimport jwtDecode from \"jwt-decode\";\nimport * as Device from 'expo-device';\nimport { IS_PRODUCTION, API_DEVELOPMENT, API_PRODUCTION } from \"../../env\";\n\nconst cache = new InMemoryCache({});\n\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable(observer => {\n      let handle: any;\n      Promise.resolve(operation)\n        .then(operation => {\n          \n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer)\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    })\n);\n\nconst authLink = setContext((_request, { headers }) => {\n  const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTU4MjE4MTE0OCwiZXhwIjoxNTgzOTA5MTQ4fQ.BP14nc4IbJmtPgIu39pnGSjtzgId2WqRhtZtKDX7b-E';\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : \"\",\n    }\n  };\n});\n\nexport const client = new ApolloClient({\n  link: ApolloLink.from([\n    new TokenRefreshLink({\n      accessTokenField: \"accessToken\",\n      isTokenValidOrUndefined: () => {\n        return true;\n      },\n      fetchAccessToken: () => {\n        return fetch(`${IS_PRODUCTION ? API_PRODUCTION : API_DEVELOPMENT}/refresh_token`, {\n          method: \"POST\",\n          credentials: \"include\"\n        });\n      },\n      handleFetch: accessToken => {\n      },\n      handleError: err => {\n        console.warn(\"Your refresh token is invalid. Try to relogin\");\n        console.error(err);\n      }\n    }),\n    onError(({ graphQLErrors, networkError }) => {\n      console.log(graphQLErrors);\n      console.log(networkError);\n    }),\n    authLink,\n    requestLink,\n    new HttpLink({\n      uri: `${IS_PRODUCTION ? API_PRODUCTION : API_DEVELOPMENT}/graphql`,\n      credentials: \"include\"\n    })\n  ]),\n  cache\n});","import { Providers } from \"./src/Providers\";\n\nexport default Providers;\n","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { AuthProvider } from \"./AuthProvider\";\nimport { Routes } from \"./Routes\";\nimport { client } from \"./lib/apolloClient\";\n\ninterface ProvidersProps {}\n\nexport const Providers: React.FC<ProvidersProps> = ({}) => {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <Routes />\n      </AuthProvider>\n    </ApolloProvider>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 276,\n\t\"./af.js\": 276,\n\t\"./ar\": 277,\n\t\"./ar-dz\": 278,\n\t\"./ar-dz.js\": 278,\n\t\"./ar-kw\": 279,\n\t\"./ar-kw.js\": 279,\n\t\"./ar-ly\": 280,\n\t\"./ar-ly.js\": 280,\n\t\"./ar-ma\": 281,\n\t\"./ar-ma.js\": 281,\n\t\"./ar-sa\": 282,\n\t\"./ar-sa.js\": 282,\n\t\"./ar-tn\": 283,\n\t\"./ar-tn.js\": 283,\n\t\"./ar.js\": 277,\n\t\"./az\": 284,\n\t\"./az.js\": 284,\n\t\"./be\": 285,\n\t\"./be.js\": 285,\n\t\"./bg\": 286,\n\t\"./bg.js\": 286,\n\t\"./bm\": 287,\n\t\"./bm.js\": 287,\n\t\"./bn\": 288,\n\t\"./bn.js\": 288,\n\t\"./bo\": 289,\n\t\"./bo.js\": 289,\n\t\"./br\": 290,\n\t\"./br.js\": 290,\n\t\"./bs\": 291,\n\t\"./bs.js\": 291,\n\t\"./ca\": 292,\n\t\"./ca.js\": 292,\n\t\"./cs\": 293,\n\t\"./cs.js\": 293,\n\t\"./cv\": 294,\n\t\"./cv.js\": 294,\n\t\"./cy\": 295,\n\t\"./cy.js\": 295,\n\t\"./da\": 296,\n\t\"./da.js\": 296,\n\t\"./de\": 297,\n\t\"./de-at\": 298,\n\t\"./de-at.js\": 298,\n\t\"./de-ch\": 299,\n\t\"./de-ch.js\": 299,\n\t\"./de.js\": 297,\n\t\"./dv\": 300,\n\t\"./dv.js\": 300,\n\t\"./el\": 301,\n\t\"./el.js\": 301,\n\t\"./en-SG\": 302,\n\t\"./en-SG.js\": 302,\n\t\"./en-au\": 303,\n\t\"./en-au.js\": 303,\n\t\"./en-ca\": 304,\n\t\"./en-ca.js\": 304,\n\t\"./en-gb\": 305,\n\t\"./en-gb.js\": 305,\n\t\"./en-ie\": 306,\n\t\"./en-ie.js\": 306,\n\t\"./en-il\": 307,\n\t\"./en-il.js\": 307,\n\t\"./en-nz\": 308,\n\t\"./en-nz.js\": 308,\n\t\"./eo\": 309,\n\t\"./eo.js\": 309,\n\t\"./es\": 310,\n\t\"./es-do\": 311,\n\t\"./es-do.js\": 311,\n\t\"./es-us\": 312,\n\t\"./es-us.js\": 312,\n\t\"./es.js\": 310,\n\t\"./et\": 313,\n\t\"./et.js\": 313,\n\t\"./eu\": 314,\n\t\"./eu.js\": 314,\n\t\"./fa\": 315,\n\t\"./fa.js\": 315,\n\t\"./fi\": 316,\n\t\"./fi.js\": 316,\n\t\"./fo\": 317,\n\t\"./fo.js\": 317,\n\t\"./fr\": 318,\n\t\"./fr-ca\": 319,\n\t\"./fr-ca.js\": 319,\n\t\"./fr-ch\": 320,\n\t\"./fr-ch.js\": 320,\n\t\"./fr.js\": 318,\n\t\"./fy\": 321,\n\t\"./fy.js\": 321,\n\t\"./ga\": 322,\n\t\"./ga.js\": 322,\n\t\"./gd\": 323,\n\t\"./gd.js\": 323,\n\t\"./gl\": 324,\n\t\"./gl.js\": 324,\n\t\"./gom-latn\": 325,\n\t\"./gom-latn.js\": 325,\n\t\"./gu\": 326,\n\t\"./gu.js\": 326,\n\t\"./he\": 327,\n\t\"./he.js\": 327,\n\t\"./hi\": 328,\n\t\"./hi.js\": 328,\n\t\"./hr\": 329,\n\t\"./hr.js\": 329,\n\t\"./hu\": 330,\n\t\"./hu.js\": 330,\n\t\"./hy-am\": 331,\n\t\"./hy-am.js\": 331,\n\t\"./id\": 332,\n\t\"./id.js\": 332,\n\t\"./is\": 333,\n\t\"./is.js\": 333,\n\t\"./it\": 334,\n\t\"./it-ch\": 335,\n\t\"./it-ch.js\": 335,\n\t\"./it.js\": 334,\n\t\"./ja\": 336,\n\t\"./ja.js\": 336,\n\t\"./jv\": 337,\n\t\"./jv.js\": 337,\n\t\"./ka\": 338,\n\t\"./ka.js\": 338,\n\t\"./kk\": 339,\n\t\"./kk.js\": 339,\n\t\"./km\": 340,\n\t\"./km.js\": 340,\n\t\"./kn\": 341,\n\t\"./kn.js\": 341,\n\t\"./ko\": 342,\n\t\"./ko.js\": 342,\n\t\"./ku\": 343,\n\t\"./ku.js\": 343,\n\t\"./ky\": 344,\n\t\"./ky.js\": 344,\n\t\"./lb\": 345,\n\t\"./lb.js\": 345,\n\t\"./lo\": 346,\n\t\"./lo.js\": 346,\n\t\"./lt\": 347,\n\t\"./lt.js\": 347,\n\t\"./lv\": 348,\n\t\"./lv.js\": 348,\n\t\"./me\": 349,\n\t\"./me.js\": 349,\n\t\"./mi\": 350,\n\t\"./mi.js\": 350,\n\t\"./mk\": 351,\n\t\"./mk.js\": 351,\n\t\"./ml\": 352,\n\t\"./ml.js\": 352,\n\t\"./mn\": 353,\n\t\"./mn.js\": 353,\n\t\"./mr\": 354,\n\t\"./mr.js\": 354,\n\t\"./ms\": 355,\n\t\"./ms-my\": 356,\n\t\"./ms-my.js\": 356,\n\t\"./ms.js\": 355,\n\t\"./mt\": 357,\n\t\"./mt.js\": 357,\n\t\"./my\": 358,\n\t\"./my.js\": 358,\n\t\"./nb\": 359,\n\t\"./nb.js\": 359,\n\t\"./ne\": 360,\n\t\"./ne.js\": 360,\n\t\"./nl\": 361,\n\t\"./nl-be\": 362,\n\t\"./nl-be.js\": 362,\n\t\"./nl.js\": 361,\n\t\"./nn\": 363,\n\t\"./nn.js\": 363,\n\t\"./pa-in\": 364,\n\t\"./pa-in.js\": 364,\n\t\"./pl\": 365,\n\t\"./pl.js\": 365,\n\t\"./pt\": 366,\n\t\"./pt-br\": 367,\n\t\"./pt-br.js\": 367,\n\t\"./pt.js\": 366,\n\t\"./ro\": 368,\n\t\"./ro.js\": 368,\n\t\"./ru\": 369,\n\t\"./ru.js\": 369,\n\t\"./sd\": 370,\n\t\"./sd.js\": 370,\n\t\"./se\": 371,\n\t\"./se.js\": 371,\n\t\"./si\": 372,\n\t\"./si.js\": 372,\n\t\"./sk\": 373,\n\t\"./sk.js\": 373,\n\t\"./sl\": 374,\n\t\"./sl.js\": 374,\n\t\"./sq\": 375,\n\t\"./sq.js\": 375,\n\t\"./sr\": 376,\n\t\"./sr-cyrl\": 377,\n\t\"./sr-cyrl.js\": 377,\n\t\"./sr.js\": 376,\n\t\"./ss\": 378,\n\t\"./ss.js\": 378,\n\t\"./sv\": 379,\n\t\"./sv.js\": 379,\n\t\"./sw\": 380,\n\t\"./sw.js\": 380,\n\t\"./ta\": 381,\n\t\"./ta.js\": 381,\n\t\"./te\": 382,\n\t\"./te.js\": 382,\n\t\"./tet\": 383,\n\t\"./tet.js\": 383,\n\t\"./tg\": 384,\n\t\"./tg.js\": 384,\n\t\"./th\": 385,\n\t\"./th.js\": 385,\n\t\"./tl-ph\": 386,\n\t\"./tl-ph.js\": 386,\n\t\"./tlh\": 387,\n\t\"./tlh.js\": 387,\n\t\"./tr\": 388,\n\t\"./tr.js\": 388,\n\t\"./tzl\": 389,\n\t\"./tzl.js\": 389,\n\t\"./tzm\": 390,\n\t\"./tzm-latn\": 391,\n\t\"./tzm-latn.js\": 391,\n\t\"./tzm.js\": 390,\n\t\"./ug-cn\": 392,\n\t\"./ug-cn.js\": 392,\n\t\"./uk\": 393,\n\t\"./uk.js\": 393,\n\t\"./ur\": 394,\n\t\"./ur.js\": 394,\n\t\"./uz\": 395,\n\t\"./uz-latn\": 396,\n\t\"./uz-latn.js\": 396,\n\t\"./uz.js\": 395,\n\t\"./vi\": 397,\n\t\"./vi.js\": 397,\n\t\"./x-pseudo\": 398,\n\t\"./x-pseudo.js\": 398,\n\t\"./yo\": 399,\n\t\"./yo.js\": 399,\n\t\"./zh-cn\": 400,\n\t\"./zh-cn.js\": 400,\n\t\"./zh-hk\": 401,\n\t\"./zh-hk.js\": 401,\n\t\"./zh-tw\": 402,\n\t\"./zh-tw.js\": 402\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 688;"],"sourceRoot":""}